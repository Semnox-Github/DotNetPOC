/********************************************************************************************
 * Project Name - OTPController
 * Description  - Controller for Getting the Configuration Setting for the Customer App
 * 
 **************
 **Version Log
 **************
 *Version     Date             Modified By    Remarks          
 *********************************************************************************************
 *2.60        07-May-2019      Nitin Pai      Initial Version 
*2.80        05-Apr-2020      Girish Kundar  Modified: API end point and removed token from the body 
 ********************************************************************************************/
using System;
using System.Net;
using System.Net.Http;
using System.Web;
using System.Web.Http;
using Semnox.Core.Utilities;
using Semnox.Parafait.CustomerApp;

namespace Semnox.CommonAPI.Controllers.CustomerApp
{
    public class CustomerAppUserLogController : ApiController
    {
        private static readonly Semnox.Parafait.logging.Logger log = new Semnox.Parafait.logging.Logger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        private ExecutionContext executionContext;

        /// <summary>
        /// Validate the OTP sent by the user with the OTP generated by the system
        /// </summary>  
        [HttpPost]
        [Route("api/CustomerApp/UserLogs")]
        public HttpResponseMessage Post([FromBody]CustomerAppUserLogDTO userLogDTO)
        {
            SecurityTokenDTO securityTokenDTO = null;
            Utilities utilities = new Utilities();

            try
            {
                log.LogMethodEntry(userLogDTO);
                SecurityTokenBL securityTokenBL = new SecurityTokenBL();
                securityTokenBL.GenerateJWTToken();
                securityTokenDTO = securityTokenBL.GetSecurityTokenDTO;
                executionContext = new ExecutionContext(securityTokenDTO.LoginId, securityTokenDTO.SiteId, securityTokenDTO.MachineId, -1, Convert.ToBoolean(HttpContext.Current.Application["IsCorporate"]), Convert.ToInt32(securityTokenDTO.LanguageId));
                CustomerAppUserLogBL userLogBL = new CustomerAppUserLogBL(executionContext, userLogDTO);
                userLogBL.Save();
                return Request.CreateResponse(HttpStatusCode.OK, new { data = ""});
            }
            catch (Exception ex)
            {
                log.LogMethodExit(ex);
                log.Debug(ex);
                return Request.CreateResponse(HttpStatusCode.BadRequest, new { data = ""});
            }
        }

    }
}
