//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://tempuri.org/")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback Get_All_ProvidersOperationCompleted;

    private System.Threading.SendOrPostCallback Update_Bloked_MobilesOperationCompleted;

    private System.Threading.SendOrPostCallback Send_SMSOperationCompleted;

    private System.Threading.SendOrPostCallback Send_SMS1OperationCompleted;

    private System.Threading.SendOrPostCallback Send_SMS_PortOperationCompleted;

    private System.Threading.SendOrPostCallback Send_SMS_Without_ResponseOperationCompleted;

    private System.Threading.SendOrPostCallback Send_ArrSMSOperationCompleted;

    private System.Threading.SendOrPostCallback Authenticate_EmailOperationCompleted;

    private System.Threading.SendOrPostCallback Upload_FileOperationCompleted;

    private System.Threading.SendOrPostCallback SMS_CountOperationCompleted;

    private System.Threading.SendOrPostCallback Get_Account_CreditOperationCompleted;

    /// <remarks/>
    public Service()
    {
        this.Url = "http://interface.ezagel.com/portex_ws/service.asmx";
    }

    /// <remarks/>
    public event Get_All_ProvidersCompletedEventHandler Get_All_ProvidersCompleted;

    /// <remarks/>
    public event Update_Bloked_MobilesCompletedEventHandler Update_Bloked_MobilesCompleted;

    /// <remarks/>
    public event Send_SMSCompletedEventHandler Send_SMSCompleted;

    /// <remarks/>
    public event Send_SMS1CompletedEventHandler Send_SMS1Completed;

    /// <remarks/>
    public event Send_SMS_PortCompletedEventHandler Send_SMS_PortCompleted;

    /// <remarks/>
    public event Send_SMS_Without_ResponseCompletedEventHandler Send_SMS_Without_ResponseCompleted;

    /// <remarks/>
    public event Send_ArrSMSCompletedEventHandler Send_ArrSMSCompleted;

    /// <remarks/>
    public event Authenticate_EmailCompletedEventHandler Authenticate_EmailCompleted;

    /// <remarks/>
    public event Upload_FileCompletedEventHandler Upload_FileCompleted;

    /// <remarks/>
    public event SMS_CountCompletedEventHandler SMS_CountCompleted;

    /// <remarks/>
    public event Get_Account_CreditCompletedEventHandler Get_Account_CreditCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_All_Providers", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
    public Provider[] Get_All_Providers(string ACtiveCode)
    {
        object[] results = this.Invoke("Get_All_Providers", new object[] {
                    ACtiveCode});
        return ((Provider[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGet_All_Providers(string ACtiveCode, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Get_All_Providers", new object[] {
                    ACtiveCode}, callback, asyncState);
    }

    /// <remarks/>
    public Provider[] EndGet_All_Providers(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((Provider[])(results[0]));
    }

    /// <remarks/>
    public void Get_All_ProvidersAsync(string ACtiveCode)
    {
        this.Get_All_ProvidersAsync(ACtiveCode, null);
    }

    /// <remarks/>
    public void Get_All_ProvidersAsync(string ACtiveCode, object userState)
    {
        if ((this.Get_All_ProvidersOperationCompleted == null))
        {
            this.Get_All_ProvidersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_All_ProvidersOperationCompleted);
        }
        this.InvokeAsync("Get_All_Providers", new object[] {
                    ACtiveCode}, this.Get_All_ProvidersOperationCompleted, userState);
    }

    private void OnGet_All_ProvidersOperationCompleted(object arg)
    {
        if ((this.Get_All_ProvidersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Get_All_ProvidersCompleted(this, new Get_All_ProvidersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Bloked_Mobiles", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool Update_Bloked_Mobiles(string ACtiveCode)
    {
        object[] results = this.Invoke("Update_Bloked_Mobiles", new object[] {
                    ACtiveCode});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUpdate_Bloked_Mobiles(string ACtiveCode, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Update_Bloked_Mobiles", new object[] {
                    ACtiveCode}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndUpdate_Bloked_Mobiles(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void Update_Bloked_MobilesAsync(string ACtiveCode)
    {
        this.Update_Bloked_MobilesAsync(ACtiveCode, null);
    }

    /// <remarks/>
    public void Update_Bloked_MobilesAsync(string ACtiveCode, object userState)
    {
        if ((this.Update_Bloked_MobilesOperationCompleted == null))
        {
            this.Update_Bloked_MobilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Bloked_MobilesOperationCompleted);
        }
        this.InvokeAsync("Update_Bloked_Mobiles", new object[] {
                    ACtiveCode}, this.Update_Bloked_MobilesOperationCompleted, userState);
    }

    private void OnUpdate_Bloked_MobilesOperationCompleted(object arg)
    {
        if ((this.Update_Bloked_MobilesCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Update_Bloked_MobilesCompleted(this, new Update_Bloked_MobilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_SMS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Send_SMS(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service)
    {
        object[] results = this.Invoke("Send_SMS", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend_SMS(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send_SMS", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service}, callback, asyncState);
    }

    /// <remarks/>
    public string EndSend_SMS(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Send_SMSAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service)
    {
        this.Send_SMSAsync(Msg_ID, Mobile_NO, Body, Validty, StartTime, Sender, User, Password, Service, null);
    }

    /// <remarks/>
    public void Send_SMSAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, object userState)
    {
        if ((this.Send_SMSOperationCompleted == null))
        {
            this.Send_SMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_SMSOperationCompleted);
        }
        this.InvokeAsync("Send_SMS", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service}, this.Send_SMSOperationCompleted, userState);
    }

    private void OnSend_SMSOperationCompleted(object arg)
    {
        if ((this.Send_SMSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Send_SMSCompleted(this, new Send_SMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.WebMethodAttribute(MessageName = "Send_SMS1")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_SMSOverloaded", RequestElementName = "Send_SMSOverloaded", RequestNamespace = "http://tempuri.org/", ResponseElementName = "Send_SMSOverloadedResponse", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("Send_SMSOverloadedResult")]
    public string Send_SMS(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID)
    {
        object[] results = this.Invoke("Send_SMS1", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend_SMS1(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send_SMS1", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID}, callback, asyncState);
    }

    /// <remarks/>
    public string EndSend_SMS1(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Send_SMS1Async(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID)
    {
        this.Send_SMS1Async(Msg_ID, Mobile_NO, Body, Validty, StartTime, Sender, User, Password, Service, File_ID, Channel_ID, null);
    }

    /// <remarks/>
    public void Send_SMS1Async(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID, object userState)
    {
        if ((this.Send_SMS1OperationCompleted == null))
        {
            this.Send_SMS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_SMS1OperationCompleted);
        }
        this.InvokeAsync("Send_SMS1", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID}, this.Send_SMS1OperationCompleted, userState);
    }

    private void OnSend_SMS1OperationCompleted(object arg)
    {
        if ((this.Send_SMS1Completed != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Send_SMS1Completed(this, new Send_SMS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_SMS_Port", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Send_SMS_Port(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int SMS_Port)
    {
        object[] results = this.Invoke("Send_SMS_Port", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    SMS_Port});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend_SMS_Port(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int SMS_Port, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send_SMS_Port", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    SMS_Port}, callback, asyncState);
    }

    /// <remarks/>
    public string EndSend_SMS_Port(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Send_SMS_PortAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int SMS_Port)
    {
        this.Send_SMS_PortAsync(Msg_ID, Mobile_NO, Body, Validty, StartTime, Sender, User, Password, Service, SMS_Port, null);
    }

    /// <remarks/>
    public void Send_SMS_PortAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int SMS_Port, object userState)
    {
        if ((this.Send_SMS_PortOperationCompleted == null))
        {
            this.Send_SMS_PortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_SMS_PortOperationCompleted);
        }
        this.InvokeAsync("Send_SMS_Port", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    SMS_Port}, this.Send_SMS_PortOperationCompleted, userState);
    }

    private void OnSend_SMS_PortOperationCompleted(object arg)
    {
        if ((this.Send_SMS_PortCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Send_SMS_PortCompleted(this, new Send_SMS_PortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_SMSWithoutResponse", RequestElementName = "Send_SMSWithoutResponse", RequestNamespace = "http://tempuri.org/", ResponseElementName = "Send_SMSWithoutResponseResponse", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Send_SMS_Without_Response(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID)
    {
        this.Invoke("Send_SMS_Without_Response", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID});
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend_SMS_Without_Response(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send_SMS_Without_Response", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID}, callback, asyncState);
    }

    /// <remarks/>
    public void EndSend_SMS_Without_Response(System.IAsyncResult asyncResult)
    {
        this.EndInvoke(asyncResult);
    }

    /// <remarks/>
    public void Send_SMS_Without_ResponseAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID)
    {
        this.Send_SMS_Without_ResponseAsync(Msg_ID, Mobile_NO, Body, Validty, StartTime, Sender, User, Password, Service, File_ID, Channel_ID, null);
    }

    /// <remarks/>
    public void Send_SMS_Without_ResponseAsync(string Msg_ID, string Mobile_NO, string Body, string Validty, string StartTime, string Sender, string User, string Password, string Service, int File_ID, int Channel_ID, object userState)
    {
        if ((this.Send_SMS_Without_ResponseOperationCompleted == null))
        {
            this.Send_SMS_Without_ResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_SMS_Without_ResponseOperationCompleted);
        }
        this.InvokeAsync("Send_SMS_Without_Response", new object[] {
                    Msg_ID,
                    Mobile_NO,
                    Body,
                    Validty,
                    StartTime,
                    Sender,
                    User,
                    Password,
                    Service,
                    File_ID,
                    Channel_ID}, this.Send_SMS_Without_ResponseOperationCompleted, userState);
    }

    private void OnSend_SMS_Without_ResponseOperationCompleted(object arg)
    {
        if ((this.Send_SMS_Without_ResponseCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Send_SMS_Without_ResponseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send_Arr_SMS", RequestElementName = "Send_Arr_SMS", RequestNamespace = "http://tempuri.org/", ResponseElementName = "Send_Arr_SMSResponse", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("Send_Arr_SMSResult")]
    public int Send_ArrSMS(SMSBulk[] Sms)
    {
        object[] results = this.Invoke("Send_ArrSMS", new object[] {
                    Sms});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend_ArrSMS(SMSBulk[] Sms, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send_ArrSMS", new object[] {
                    Sms}, callback, asyncState);
    }

    /// <remarks/>
    public int EndSend_ArrSMS(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void Send_ArrSMSAsync(SMSBulk[] Sms)
    {
        this.Send_ArrSMSAsync(Sms, null);
    }

    /// <remarks/>
    public void Send_ArrSMSAsync(SMSBulk[] Sms, object userState)
    {
        if ((this.Send_ArrSMSOperationCompleted == null))
        {
            this.Send_ArrSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_ArrSMSOperationCompleted);
        }
        this.InvokeAsync("Send_ArrSMS", new object[] {
                    Sms}, this.Send_ArrSMSOperationCompleted, userState);
    }

    private void OnSend_ArrSMSOperationCompleted(object arg)
    {
        if ((this.Send_ArrSMSCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Send_ArrSMSCompleted(this, new Send_ArrSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Authenticate_Email", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Authenticate_Email(string Email, ref string Username, ref string Password, ref int Credit, string ACtiveCode)
    {
        object[] results = this.Invoke("Authenticate_Email", new object[] {
                    Email,
                    Username,
                    Password,
                    Credit,
                    ACtiveCode});
        Username = ((string)(results[1]));
        Password = ((string)(results[2]));
        Credit = ((int)(results[3]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginAuthenticate_Email(string Email, string Username, string Password, int Credit, string ACtiveCode, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Authenticate_Email", new object[] {
                    Email,
                    Username,
                    Password,
                    Credit,
                    ACtiveCode}, callback, asyncState);
    }

    /// <remarks/>
    public string EndAuthenticate_Email(System.IAsyncResult asyncResult, out string Username, out string Password, out int Credit)
    {
        object[] results = this.EndInvoke(asyncResult);
        Username = ((string)(results[1]));
        Password = ((string)(results[2]));
        Credit = ((int)(results[3]));
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Authenticate_EmailAsync(string Email, string Username, string Password, int Credit, string ACtiveCode)
    {
        this.Authenticate_EmailAsync(Email, Username, Password, Credit, ACtiveCode, null);
    }

    /// <remarks/>
    public void Authenticate_EmailAsync(string Email, string Username, string Password, int Credit, string ACtiveCode, object userState)
    {
        if ((this.Authenticate_EmailOperationCompleted == null))
        {
            this.Authenticate_EmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticate_EmailOperationCompleted);
        }
        this.InvokeAsync("Authenticate_Email", new object[] {
                    Email,
                    Username,
                    Password,
                    Credit,
                    ACtiveCode}, this.Authenticate_EmailOperationCompleted, userState);
    }

    private void OnAuthenticate_EmailOperationCompleted(object arg)
    {
        if ((this.Authenticate_EmailCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Authenticate_EmailCompleted(this, new Authenticate_EmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upload_File", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Upload_File(string File_Name, string Body, string Validty, string Sender, string StartTime, int EndTime, int Channel_ID, string User, string Password)
    {
        object[] results = this.Invoke("Upload_File", new object[] {
                    File_Name,
                    Body,
                    Validty,
                    Sender,
                    StartTime,
                    EndTime,
                    Channel_ID,
                    User,
                    Password});
        return ((string)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginUpload_File(string File_Name, string Body, string Validty, string Sender, string StartTime, int EndTime, int Channel_ID, string User, string Password, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Upload_File", new object[] {
                    File_Name,
                    Body,
                    Validty,
                    Sender,
                    StartTime,
                    EndTime,
                    Channel_ID,
                    User,
                    Password}, callback, asyncState);
    }

    /// <remarks/>
    public string EndUpload_File(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }

    /// <remarks/>
    public void Upload_FileAsync(string File_Name, string Body, string Validty, string Sender, string StartTime, int EndTime, int Channel_ID, string User, string Password)
    {
        this.Upload_FileAsync(File_Name, Body, Validty, Sender, StartTime, EndTime, Channel_ID, User, Password, null);
    }

    /// <remarks/>
    public void Upload_FileAsync(string File_Name, string Body, string Validty, string Sender, string StartTime, int EndTime, int Channel_ID, string User, string Password, object userState)
    {
        if ((this.Upload_FileOperationCompleted == null))
        {
            this.Upload_FileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpload_FileOperationCompleted);
        }
        this.InvokeAsync("Upload_File", new object[] {
                    File_Name,
                    Body,
                    Validty,
                    Sender,
                    StartTime,
                    EndTime,
                    Channel_ID,
                    User,
                    Password}, this.Upload_FileOperationCompleted, userState);
    }

    private void OnUpload_FileOperationCompleted(object arg)
    {
        if ((this.Upload_FileCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Upload_FileCompleted(this, new Upload_FileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMS_Count", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int SMS_Count(string Body, out bool unicode)
    {
        object[] results = this.Invoke("SMS_Count", new object[] {
                    Body});
        unicode = ((bool)(results[1]));
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSMS_Count(string Body, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("SMS_Count", new object[] {
                    Body}, callback, asyncState);
    }

    /// <remarks/>
    public int EndSMS_Count(System.IAsyncResult asyncResult, out bool unicode)
    {
        object[] results = this.EndInvoke(asyncResult);
        unicode = ((bool)(results[1]));
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void SMS_CountAsync(string Body)
    {
        this.SMS_CountAsync(Body, null);
    }

    /// <remarks/>
    public void SMS_CountAsync(string Body, object userState)
    {
        if ((this.SMS_CountOperationCompleted == null))
        {
            this.SMS_CountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMS_CountOperationCompleted);
        }
        this.InvokeAsync("SMS_Count", new object[] {
                    Body}, this.SMS_CountOperationCompleted, userState);
    }

    private void OnSMS_CountOperationCompleted(object arg)
    {
        if ((this.SMS_CountCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SMS_CountCompleted(this, new SMS_CountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Account_Credit", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int Get_Account_Credit(string Account_Username, string Account_Password)
    {
        object[] results = this.Invoke("Get_Account_Credit", new object[] {
                    Account_Username,
                    Account_Password});
        return ((int)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGet_Account_Credit(string Account_Username, string Account_Password, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Get_Account_Credit", new object[] {
                    Account_Username,
                    Account_Password}, callback, asyncState);
    }

    /// <remarks/>
    public int EndGet_Account_Credit(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }

    /// <remarks/>
    public void Get_Account_CreditAsync(string Account_Username, string Account_Password)
    {
        this.Get_Account_CreditAsync(Account_Username, Account_Password, null);
    }

    /// <remarks/>
    public void Get_Account_CreditAsync(string Account_Username, string Account_Password, object userState)
    {
        if ((this.Get_Account_CreditOperationCompleted == null))
        {
            this.Get_Account_CreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Account_CreditOperationCompleted);
        }
        this.InvokeAsync("Get_Account_Credit", new object[] {
                    Account_Username,
                    Account_Password}, this.Get_Account_CreditOperationCompleted, userState);
    }

    private void OnGet_Account_CreditOperationCompleted(object arg)
    {
        if ((this.Get_Account_CreditCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Get_Account_CreditCompleted(this, new Get_Account_CreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
public partial class Provider
{

    private int provider_IDField;

    private int user_IDField;

    private string provider_NameField;

    private string prefixField;

    private bool file_SpoolField;

    private string spool_PathField;

    private string receive_PathField;

    private string force_SenderField;

    private string sent_PathField;

    private string bad_PathField;

    /// <remarks/>
    public int Provider_ID
    {
        get
        {
            return this.provider_IDField;
        }
        set
        {
            this.provider_IDField = value;
        }
    }

    /// <remarks/>
    public int User_ID
    {
        get
        {
            return this.user_IDField;
        }
        set
        {
            this.user_IDField = value;
        }
    }

    /// <remarks/>
    public string Provider_Name
    {
        get
        {
            return this.provider_NameField;
        }
        set
        {
            this.provider_NameField = value;
        }
    }

    /// <remarks/>
    public string Prefix
    {
        get
        {
            return this.prefixField;
        }
        set
        {
            this.prefixField = value;
        }
    }

    /// <remarks/>
    public bool File_Spool
    {
        get
        {
            return this.file_SpoolField;
        }
        set
        {
            this.file_SpoolField = value;
        }
    }

    /// <remarks/>
    public string Spool_Path
    {
        get
        {
            return this.spool_PathField;
        }
        set
        {
            this.spool_PathField = value;
        }
    }

    /// <remarks/>
    public string Receive_Path
    {
        get
        {
            return this.receive_PathField;
        }
        set
        {
            this.receive_PathField = value;
        }
    }

    /// <remarks/>
    public string Force_Sender
    {
        get
        {
            return this.force_SenderField;
        }
        set
        {
            this.force_SenderField = value;
        }
    }

    /// <remarks/>
    public string Sent_Path
    {
        get
        {
            return this.sent_PathField;
        }
        set
        {
            this.sent_PathField = value;
        }
    }

    /// <remarks/>
    public string Bad_Path
    {
        get
        {
            return this.bad_PathField;
        }
        set
        {
            this.bad_PathField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
public partial class SMSBulk
{

    private string msg_IDField;

    private string mobile_NOField;

    private string bodyField;

    private string validtyField;

    private string startTimeField;

    private string senderField;

    private string userField;

    private string passwordField;

    private string serviceField;

    private int file_IDField;

    private int channel_IDField;

    /// <remarks/>
    public string Msg_ID
    {
        get
        {
            return this.msg_IDField;
        }
        set
        {
            this.msg_IDField = value;
        }
    }

    /// <remarks/>
    public string Mobile_NO
    {
        get
        {
            return this.mobile_NOField;
        }
        set
        {
            this.mobile_NOField = value;
        }
    }

    /// <remarks/>
    public string Body
    {
        get
        {
            return this.bodyField;
        }
        set
        {
            this.bodyField = value;
        }
    }

    /// <remarks/>
    public string Validty
    {
        get
        {
            return this.validtyField;
        }
        set
        {
            this.validtyField = value;
        }
    }

    /// <remarks/>
    public string StartTime
    {
        get
        {
            return this.startTimeField;
        }
        set
        {
            this.startTimeField = value;
        }
    }

    /// <remarks/>
    public string Sender
    {
        get
        {
            return this.senderField;
        }
        set
        {
            this.senderField = value;
        }
    }

    /// <remarks/>
    public string User
    {
        get
        {
            return this.userField;
        }
        set
        {
            this.userField = value;
        }
    }

    /// <remarks/>
    public string Password
    {
        get
        {
            return this.passwordField;
        }
        set
        {
            this.passwordField = value;
        }
    }

    /// <remarks/>
    public string Service
    {
        get
        {
            return this.serviceField;
        }
        set
        {
            this.serviceField = value;
        }
    }

    /// <remarks/>
    public int File_ID
    {
        get
        {
            return this.file_IDField;
        }
        set
        {
            this.file_IDField = value;
        }
    }

    /// <remarks/>
    public int Channel_ID
    {
        get
        {
            return this.channel_IDField;
        }
        set
        {
            this.channel_IDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Get_All_ProvidersCompletedEventHandler(object sender, Get_All_ProvidersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Get_All_ProvidersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Get_All_ProvidersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Provider[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Provider[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Update_Bloked_MobilesCompletedEventHandler(object sender, Update_Bloked_MobilesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Update_Bloked_MobilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Update_Bloked_MobilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Send_SMSCompletedEventHandler(object sender, Send_SMSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Send_SMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Send_SMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Send_SMS1CompletedEventHandler(object sender, Send_SMS1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Send_SMS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Send_SMS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Send_SMS_PortCompletedEventHandler(object sender, Send_SMS_PortCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Send_SMS_PortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Send_SMS_PortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Send_SMS_Without_ResponseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Send_ArrSMSCompletedEventHandler(object sender, Send_ArrSMSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Send_ArrSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Send_ArrSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Authenticate_EmailCompletedEventHandler(object sender, Authenticate_EmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Authenticate_EmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Authenticate_EmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }

    /// <remarks/>
    public string Username
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }

    /// <remarks/>
    public string Password
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }

    /// <remarks/>
    public int Credit
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Upload_FileCompletedEventHandler(object sender, Upload_FileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Upload_FileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Upload_FileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public string Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void SMS_CountCompletedEventHandler(object sender, SMS_CountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SMS_CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SMS_CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }

    /// <remarks/>
    public bool unicode
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void Get_Account_CreditCompletedEventHandler(object sender, Get_Account_CreditCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Get_Account_CreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal Get_Account_CreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public int Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}
