<Window x:Class="Semnox.Parafait.RedemptionUI.RedemptionTicketAllocationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:common="clr-namespace:Semnox.Parafait.CommonUI;assembly=CommonUI"
        xmlns:local="clr-namespace:Semnox.Parafait.RedemptionUI"
        Style="{StaticResource PopupWindowStyle}"
        mc:Ignorable="d"
        Title="RedemptionTicketAllocationView">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                   Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style TargetType="{x:Type Button}"
               x:Key="CloseIconStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent"
                                x:Name="OuterBorder"
                                BorderThickness="2"
                                Padding="2">
                            <Path x:Name="XIconPath"
                                  Data="M0,0 L1,1 M0,1 L1,0"
                                  Stretch="Uniform"
                                  StrokeThickness="2" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="BorderBrush"
                                        TargetName="OuterBorder"
                                        Value="{StaticResource Control.BorderBrush}" />
                                <Setter Property="Stroke"
                                        TargetName="XIconPath"
                                        Value="{StaticResource Control.BorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        TargetName="OuterBorder"
                                        Value="{StaticResource Action.Active.Background}" />
                                <Setter Property="Stroke"
                                        TargetName="XIconPath"
                                        Value="{StaticResource Action.Active.Background}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type common:CustomScrollViewer}}"
               TargetType="{x:Type common:CustomScrollViewer}"
               x:Key="MultiScreenScrollViewer">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                             Value="True">
                    <Setter Property="Size"
                            Value="XSmall" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type common:CustomActionButton}}"
               TargetType="{x:Type common:CustomActionButton}"
               x:Key="MultiScreenButtonStyle">
            <Setter Property="Padding"
                    Value="16,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                             Value="True">
                    <Setter Property="Height"
                            Value="40" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource {x:Type common:CustomTextBlock}}"
               TargetType="{x:Type common:CustomTextBlock}"
               x:Key="MultiScreenTextBlockStyle">
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="FontWeight"
                    Value="{StaticResource FontWeight.Bold}" />
            <Setter Property="Margin"
                    Value="0,0,16,0" />
            <Setter Property="TextTrimming"
                    Value="CharacterEllipsis" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.IsMultiScreenRowTwo, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                             Value="True">
                    <Setter Property="TextSize"
                            Value="XSmall" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ContainerStyle"
               TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid x:Name="TicketsDataContainerGrid"
                              VerticalAlignment="Center"
                              Margin="0,0,0,8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="9*" />
                            </Grid.ColumnDefinitions>

                            <Button x:Name="btnDelete"
                                    Style="{StaticResource CloseIconStyle}"
                                    Height="36"
                                    Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    CommandParameter="{Binding}"
                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                    Margin="16,0"
                                    IsEnabled="{Binding IsCheckboxEnable}" />
                            <Border Background="{StaticResource Control.ComboBackground}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Grid.Column="1"
                                    Padding="8,0,0,0"
                                    x:Name="ListBoxItemsBackgroundBorder">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction CommandParameter="{Binding}"
                                                               Command="{Binding  DataContext.ItemClickedCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ItemsControl x:Name="IcItemsDisplay"
                                              ItemsSource="{Binding DisplayRedemptionItems}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="{Binding DisplayRedemptionItems.Count}"
                                                         Rows="1">
                                            </UniformGrid>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <common:CustomTextBlock x:Name="tbDisplayContent"
                                                                    Style="{StaticResource MultiScreenTextBlockStyle}"
                                                                    Text="{Binding IsAsync=True}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseDown">
                                                        <i:InvokeCommandAction CommandParameter="{Binding}"
                                                                               Command="{Binding DataContext.TextblockClickedCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </common:CustomTextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding DataContext.IsMultiScreenRowTwo,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                         Value="True">
                                <Setter Property="MinHeight"
                                        TargetName="TicketsDataContainerGrid"
                                        Value="36" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.IsMultiScreenRowTwo,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                         Value="False">
                                <Setter Property="MinHeight"
                                        TargetName="TicketsDataContainerGrid"
                                        Value="56" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid x:Name="MainGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="8*" />
            </Grid.RowDefinitions>

            <Border x:Name="TopHeaderContainerBorder"
                    Grid.Row="0"
                    BorderBrush="{StaticResource Control.ComboBackground}"
                    BorderThickness="0,0,0,1"
                    VerticalAlignment="Top">
                <StackPanel x:Name="HeaderStackPanel"
                            Grid.Row="0"
                            Orientation="Vertical"
                            VerticalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MultiScreenMode}"
                                             Value="False">
                                    <Setter Property="Margin"
                                            Value="16" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MultiScreenMode}"
                                             Value="True">
                                    <Setter Property="Margin"
                                            Value="6" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <common:CustomTextBlock x:Name="tbTitle"
                                            Grid.Row="0"
                                            Text="{Binding Title}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center">
                        <common:CustomTextBlock.Style>
                            <Style BasedOn="{StaticResource {x:Type common:CustomTextBlock}}"
                                   TargetType="{x:Type common:CustomTextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </common:CustomTextBlock.Style>
                    </common:CustomTextBlock>

                    <common:CustomTextBlock x:Name="tbHeader"
                                            Text="{Binding Heading}"
                                            FontWeight="{StaticResource FontWeight.Bold}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center" />
                </StackPanel>
            </Border>

            <Grid Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                         Value="False">
                                <Setter Property="Margin"
                                        Value="0,16,16,16" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                         Value="True">
                                <Setter Property="Margin"
                                        Value="0,4,4,4" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2.4*" />
                    <ColumnDefinition Width="8*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*" />
                    <RowDefinition Height="4*" />
                </Grid.RowDefinitions>

                <Viewbox Stretch="Fill">
                    <Viewbox.Style>
                        <Style TargetType="{x:Type Viewbox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                             Value="False">
                                    <Setter Property="Margin"
                                            Value="16,8,0,8" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                             Value="True">
                                    <Setter Property="Margin"
                                            Value="4,4,0,4" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MultiScreenMode}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MultiScreenMode}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Viewbox.Style>
                    <common:GenericToggleButtonsUserControl x:Name="MultiScreenGenericToggleButtonsUserControl"
                                                            Grid.Column="0"
                                                            DataContext="{Binding GenericToggleButtonsVM}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ToggleChecked">
                                <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:RedemptionTicketAllocationView}}"
                                                       Command="{Binding DataContext.ToggleCheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="ToggleUnchecked">
                                <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:RedemptionTicketAllocationView}}"
                                                       Command="{Binding DataContext.ToggleUncheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </common:GenericToggleButtonsUserControl>
                </Viewbox>

                <common:GenericToggleButtonsUserControl x:Name="GenericToggleButtonsUserControl"
                                                        Grid.Column="0"
                                                        DataContext="{Binding GenericToggleButtonsVM}">
                    <common:GenericToggleButtonsUserControl.Style>
                        <Style TargetType="{x:Type common:GenericToggleButtonsUserControl}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.IsMultiScreenRowTwo, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="False">
                                    <Setter Property="Margin"
                                            Value="16,8,0,8" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.IsMultiScreenRowTwo, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="Margin"
                                            Value="4,4,0,4" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.MultiScreenMode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.MultiScreenMode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </common:GenericToggleButtonsUserControl.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ToggleChecked">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:RedemptionTicketAllocationView}}"
                                                   Command="{Binding DataContext.ToggleCheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="ToggleUnchecked">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:RedemptionTicketAllocationView}}"
                                                   Command="{Binding DataContext.ToggleUncheckedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </common:GenericToggleButtonsUserControl>

                <StackPanel Grid.Column="1"
                            Grid.RowSpan="2"
                            Margin="16,0,0,0"
                            x:Name="TicketGrid"
                            Orientation="Vertical">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TicketType}"
                                             Value="TICKETS">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TicketType}"
                                             Value="CARDS">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TicketType}"
                                             Value="VOUCHERS">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TicketType}"
                                             Value="CURRENCIES">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <StackPanel Orientation="Horizontal">
                        <common:CustomNumericUpDown x:Name="upDown"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Value="{Binding ManualTicket}"
                                                    HorizontalAlignment="Left"
                                                    Heading="Manual Tickets">
                            <common:CustomNumericUpDown.Style>
                                <Style BasedOn="{StaticResource {x:Type common:CustomNumericUpDown}}"
                                       TargetType="{x:Type common:CustomNumericUpDown}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                     Value="False">
                                            <Setter Property="MaxWidth"
                                                    Value="200" />
                                            <Setter Property="MinWidth"
                                                    Value="200" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </common:CustomNumericUpDown.Style>
                        </common:CustomNumericUpDown>
                        <common:CustomActionButton x:Name="btnApply"
                                                   Grid.Column="1"
                                                   Grid.Row="0"
                                                   HorizontalAlignment="Left"
                                                   Content="Apply"
                                                   IsEnabled="{Binding IsApplyButtonEnable}"
                                                   Command="{Binding ApplyManualTicketCommand}">
                            <common:CustomActionButton.Style>
                                <Style BasedOn="{StaticResource {x:Type common:CustomActionButton}}"
                                       TargetType="{x:Type common:CustomActionButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                     Value="False">
                                            <Setter Property="MinWidth"
                                                    Value="100" />
                                            <Setter Property="Margin"
                                                    Value="48,28,0,0" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                     Value="True">
                                            <Setter Property="MinWidth"
                                                    Value="80" />
                                            <Setter Property="Margin"
                                                    Value="8,28,0,0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </common:CustomActionButton.Style>
                        </common:CustomActionButton>
                    </StackPanel>
                    <common:CustomTextBlock x:Name="tbManualTicketApplied"
                                            Margin="0,16,0,0"
                                            Grid.Row="1"
                                            TextTrimming="CharacterEllipsis"
                                            Grid.ColumnSpan="2"
                                            TextWrapping="Wrap"
                                            Text="{Binding ManualTicketAppliedContent}"
                                            TextSize="Medium"
                                            FontWeight="{StaticResource FontWeight.Bold}" />
                </StackPanel>

                <common:CustomDataGridUserControl x:Name="CustomDatagridUserControl"
                                                  DataContext="{Binding CustomDataGridVM}"
                                                  Grid.Column="1"
                                                  Grid.RowSpan="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="DeleteClicked">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                   Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                   Command="{Binding DataContext.ItemClickedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DeleteAllClicked">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                   Command="{Binding DataContext.DeleteAllCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <common:CustomDataGridUserControl.Style>
                        <Style TargetType="{x:Type common:CustomDataGridUserControl}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Visibility,ElementName=TicketGrid}"
                                             Value="Visible">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </common:CustomDataGridUserControl.Style>
                </common:CustomDataGridUserControl>
            </Grid>
        </Grid>

        <Button Grid.Row="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                x:Name="btnClose"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                Command="{Binding CloseCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{StaticResource Action.Active.Background}"
                                        x:Name="OutsideBorder">
                                    <Path Stroke="{StaticResource Action.Active.Foreground}"
                                          Data="M0,0 L1,1 M0,1 L1,0"
                                          Stretch="Uniform"
                                          StrokeThickness="2" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                 Value="False">
                                        <Setter Property="CornerRadius"
                                                TargetName="OutsideBorder"
                                                Value="48" />
                                        <Setter Property="Padding"
                                                TargetName="OutsideBorder"
                                                Value="12" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                                 Value="True">
                                        <Setter Property="CornerRadius"
                                                TargetName="OutsideBorder"
                                                Value="36" />
                                        <Setter Property="Padding"
                                                TargetName="OutsideBorder"
                                                Value="8" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                     Value="False">
                            <Setter Property="Margin"
                                    Value="0,-20,-20,0" />
                            <Setter Property="Height"
                                    Value="48" />
                            <Setter Property="Width"
                                    Value="48" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMultiScreenRowTwo}"
                                     Value="True">
                            <Setter Property="Margin"
                                    Value="0,-20,-10,0" />
                            <Setter Property="Height"
                                    Value="36" />
                            <Setter Property="Width"
                                    Value="36" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
