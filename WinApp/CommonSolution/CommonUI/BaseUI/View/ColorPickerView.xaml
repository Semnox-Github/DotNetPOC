<Window x:Class="Semnox.Parafait.CommonUI.ColorPickerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:Semnox.Parafait.CommonUI"
        Style="{StaticResource PopupWindowStyle}"
        mc:Ignorable="d"
        Title="ColorPickerView">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                   Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Style TargetType="{x:Type local:CustomTextBox}"
               BasedOn="{StaticResource {x:Type local:CustomTextBox}}"
               x:Key="GenericCustomTextBoxStyle">
            <Setter Property="MaxLength"
                    Value="3"/>
            <Setter Property="HorizontalAlignment"
                    Value="Center"/>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="Size"
                    Value="DataGridSize"/>
            <Setter Property="FontWeight"
                    Value="{StaticResource FontWeight.Bold}"/>
        </Style>

        <Style TargetType="{x:Type local:CustomTextBlock}"
               BasedOn="{StaticResource {x:Type local:CustomTextBlock}}"
               x:Key="GenericCustomTextBlockStyle">
            <Setter Property="HorizontalAlignment"
                    Value="Center"/>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="TextSize"
                    Value="Medium"/>
            <Setter Property="FontWeight"
                    Value="{StaticResource FontWeight.Bold}"/>
        </Style>

        <Style TargetType="{x:Type Border}"
               x:Key="ColorTextBorder">
            <Setter Property="MinWidth"
                    Value="88"/>
            <Setter Property="HorizontalAlignment"
                    Value="Right"/>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="BorderBrush"
                    Value="{StaticResource Control.BorderBrush.Focused}"/>
            <Setter Property="CornerRadius"
                    Value="{StaticResource CornerRadius}"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
        </Style>

        <Style TargetType="{x:Type Border}"
               BasedOn="{StaticResource ColorTextBorder}"
               x:Key="ByteTextBorder">            
            <Setter Property="Background"
                    Value="{StaticResource Control.BorderBrush}"/>
            <Setter Property="HorizontalAlignment"
                    Value="Stretch"/>
            <Setter Property="Padding"
                    Value="16,8"/>
        </Style>

        <Style TargetType="{x:Type Border}"
               BasedOn="{StaticResource ColorTextBorder}"
               x:Key="AlphaBorder">
            <Setter Property="Margin"
                    Value="0,0,0,8"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text,ElementName=txtAlphaHex}"
                                   Value="{x:Static sys:String.Empty}">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Control.BorderBrush.Error}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}"
               BasedOn="{StaticResource ColorTextBorder}"
               x:Key="RedBorder">
            <Setter Property="Margin"
                    Value="0,0,0,8"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text,ElementName=txtRedHex}"
                                   Value="{x:Static sys:String.Empty}">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Control.BorderBrush.Error}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}"
               BasedOn="{StaticResource ColorTextBorder}"
               x:Key="GreenBorder">
            <Setter Property="Margin"
                    Value="0,0,0,8"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text,ElementName=txtGreenHex}"
                                   Value="{x:Static sys:String.Empty}">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Control.BorderBrush.Error}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}"
               BasedOn="{StaticResource ColorTextBorder}"
               x:Key="BlueBorder">
            <Setter Property="Margin"
                    Value="0,0,0,8"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text,ElementName=txtBlueHex}"
                                   Value="{x:Static sys:String.Empty}">
                    <Setter Property="BorderBrush"
                            Value="{StaticResource Control.BorderBrush.Error}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="IncreaseRepeatButton" 
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true"/>
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="Focusable" 
                    Value="false"/>
            <Setter Property="IsTabStop" 
                    Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" 
                                   Height="{TemplateBinding Height}" 
                                   Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DecreaseRepeatButton" 
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true"/>
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="Focusable" 
                    Value="false"/>
            <Setter Property="IsTabStop" 
                    Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{StaticResource Control.BorderBrush.Focused}" 
                                   Height="8" 
                                   Width="{TemplateBinding Width}"
                                   Margin="5,0,0,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" 
                         TargetType="{x:Type Thumb}">
            <Border x:Name="grip"
                    Height="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}"
                    Width="36"
                    CornerRadius="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background"
                                Value="{StaticResource Control.BorderBrush.Focused}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Slider}}"
                                         Value="0">
                                <Setter Property="Background"
                                        Value="{StaticResource Control.BackGround}"/>
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource Control.BorderBrush.Focused}"/>
                                <Setter Property="BorderThickness"
                                        Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="SliderHorizontal" 
                         TargetType="{x:Type Slider}">
            <Border x:Name="border" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" 
                                       MinHeight="{TemplateBinding MinHeight}"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="TrackBackground" 
                            BorderBrush="{StaticResource SliderThumb.Track.Border}" 
                            BorderThickness="1" 
                            Background="{StaticResource SliderThumb.Track.Background}" 
                            Height="8" 
                            Margin="5,0" 
                            Grid.Row="0" 
                            VerticalAlignment="center"/>
                    <Track x:Name="PART_Track" 
                           Grid.Row="0">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton x:Name="btnDecrease"
                                          Command="{x:Static Slider.DecreaseLarge}"
                                          Style="{StaticResource DecreaseRepeatButton}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton x:Name="btnIncrease"
                                          Command="{x:Static Slider.IncreaseLarge}" 
                                          Style="{StaticResource IncreaseRepeatButton}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" 
                                   Focusable="False" 
                                   OverridesDefaultStyle="True" 
                                   Template="{StaticResource SliderThumbHorizontalDefault}" 
                                   VerticalAlignment="Center" />
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style x:Key="SliderStyle" 
               TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled"
                    Value="false"/>
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="BorderBrush" 
                    Value="Transparent"/>
            <Setter Property="ToolTip"
                    Value="{Binding Value,RelativeSource={RelativeSource Mode=Self}}"/>
            <Setter Property="Template" 
                    Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowOpacity}"
                             Value="False">
                    <Setter Property="Visibility"
                            Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type UniformGrid}"
               x:Key="GenericUniformGridStyle">
            <Setter Property="Rows"
                    Value="4"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowOpacity}"
                             Value="False">
                    <Setter Property="Rows"
                            Value="3"/>
                </DataTrigger> 
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <local:CustomTextBlock x:Name="tbColorPicker"
                                Grid.Row="0"
                                Text="Color Picker"
                                TextSize="Medium"
                                Padding="32,16"
                                FontWeight="{StaticResource FontWeight.Bold}"/>

        <Border BorderBrush="{StaticResource Control.BorderBrush}"
                Grid.Row="1"
                BorderThickness="0,1"
                Padding="32,16">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="imageBorder"
                        BorderBrush="{StaticResource Control.BorderBrush}"
                        Background="Transparent"
                        VerticalAlignment="Top"
                        BorderThickness="1"
                        Padding="8"
                        Margin="0,0,16,0"
                        Grid.Column="0"
                        Grid.Row="0">
                    <Grid>
                        <Image x:Name="ColorImage"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               Source="../../Styles/Resources/ColorSwatchSquare2.png"/>
                        <Canvas x:Name="canvasImage"
                                HorizontalAlignment="Center"
                                Background="Transparent"
                                VerticalAlignment="Top"
                                Width="{Binding ActualWidth,ElementName=ColorImage}"
                                Height="{Binding ActualHeight,ElementName=ColorImage}">
                            <Ellipse x:Name="ellipsePixel"
                                     Width="36"
                                     Height="36"
                                     StrokeThickness="2"
                                     Stroke="{StaticResource Control.BorderBrush.Focused}"
                                     Fill="{StaticResource Control.BackGround}"
                                     Canvas.Left="0"
                                     Canvas.Top="0"/>
                        </Canvas>
                    </Grid>
                </Border>
                <Border Grid.Column="1"
                        BorderBrush="{StaticResource Control.BorderBrush}"
                        Background="{StaticResource Control.BackGround}"
                        BorderThickness="1"
                        VerticalAlignment="Top"
                        Padding="8"
                        Grid.Row="0"
                        Margin="16,0">
                    <Border x:Name="SelectedColorAppliedBorder"
                            Width="{Binding ActualWidth,ElementName=ColorImage}"
                            Height="{Binding ActualHeight,ElementName=ColorImage}"
                            Background="{Binding SelectedBrush,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                </Border>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <UniformGrid Columns="3"
                                 Grid.Row="0">
                        <UniformGrid Style="{StaticResource GenericUniformGridStyle}">
                            <local:CustomTextBlock x:Name="tbAlpha"
                                                   Text="A">
                                <local:CustomTextBlock.Style>
                                    <Style TargetType="{x:Type local:CustomTextBlock}"
                                               BasedOn="{StaticResource GenericCustomTextBlockStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowOpacity}"
                                                         Value="False">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </local:CustomTextBlock.Style>
                            </local:CustomTextBlock>
                            <local:CustomTextBlock x:Name="tbRed"
                                                   Text="R"
                                                   Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            <local:CustomTextBlock x:Name="tbGreen"
                                                   Text="G"
                                                   Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            <local:CustomTextBlock x:Name="tbBlue"
                                                   Text="B"
                                                   Style="{StaticResource GenericCustomTextBlockStyle}"/>
                        </UniformGrid>
                        <UniformGrid Style="{StaticResource GenericUniformGridStyle}">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}"
                                           BasedOn="{StaticResource ByteTextBorder}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowOpacity}"
                                                         Value="False">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <local:CustomTextBlock  x:Name="tbAlphaNumber"  
                                                      Text="{Binding HexaAlpha}"
                                                      Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            </Border>
                            <Border Style="{StaticResource ByteTextBorder}">
                                <local:CustomTextBlock x:Name="tbRedNumber"
                                                     Text="{Binding HexaRed}"
                                                     Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            </Border>
                            <Border Style="{StaticResource ByteTextBorder}">
                                <local:CustomTextBlock x:Name="tbGreenNumber"
                                                     Text="{Binding HexaGreen}"
                                                     Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            </Border>
                            <Border Style="{StaticResource ByteTextBorder}">
                                <local:CustomTextBlock x:Name="tbBlueNumber"
                                                     Text="{Binding HexaBlue}"
                                                     Style="{StaticResource GenericCustomTextBlockStyle}"/>
                            </Border>
                        </UniformGrid>
                        <UniformGrid Style="{StaticResource GenericUniformGridStyle}">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}"
                                           BasedOn="{StaticResource AlphaBorder}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowOpacity}"
                                                         Value="False">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <local:CustomTextBox x:Name="txtAlphaHex"
                                                     Text="{Binding Opacity, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{StaticResource GenericCustomTextBoxStyle}"/>
                            </Border>
                            <Border Style="{StaticResource RedBorder}">
                                <local:CustomTextBox x:Name="txtRedHex"
                                                     Text="{Binding Red, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{StaticResource GenericCustomTextBoxStyle}"/>
                            </Border>
                            <Border Style="{StaticResource GreenBorder}">
                                <local:CustomTextBox x:Name="txtGreenHex"
                                                     Text="{Binding Green, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{StaticResource GenericCustomTextBoxStyle}"/>
                            </Border>
                            <Border Style="{StaticResource BlueBorder}">
                                <local:CustomTextBox x:Name="txtBlueHex"
                                                     Text="{Binding Blue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{StaticResource GenericCustomTextBoxStyle}"/>
                            </Border>
                        </UniformGrid>
                    </UniformGrid>
                    <Border Grid.Row="1"
                            Style="{StaticResource ByteTextBorder}">
                        <local:CustomTextBlock x:Name="tbSelectedColor"
                                               Style="{StaticResource GenericCustomTextBlockStyle}"
                                               Text="{Binding SelectedBrush.Color}"/>
                    </Border>
                </Grid>
        
                <Slider Grid.Row="1"
                        VerticalAlignment="Bottom"
                        Margin="0,16,0,0"
                        Minimum="0"
                        Value="{Binding Opacity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        Maximum="255"
                        TickFrequency="1"
                        IsSnapToTickEnabled="True"                                                
                        IsMoveToPointEnabled="True"
                        Grid.ColumnSpan="3" 
                        Style="{StaticResource SliderStyle}"/>
            </Grid>
        </Border>
        <Grid Margin="32,16"
              Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        Grid.Column="0"
                        Grid.ColumnSpan="2">
                <local:CustomActionButton x:Name="btnCancel"
                                           Width="{StaticResource ActionButton.Width}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                           Command="{Binding ActionsCommand}"
                                           ActionStyle="Passive"
                                           Content="CANCEL" />
                <local:CustomActionButton x:Name="btnConfirm"
                                           Width="{StaticResource ActionButton.Width}"
                                           Margin="{StaticResource OkAndYearMargin}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                           Command="{Binding ActionsCommand}"
                                           Content="CONFIRM" />
            </StackPanel>
            <Button x:Name="btnKeyBoard"
                    Grid.Column="1"
                    VerticalAlignment="Bottom"                    
                    Style="{StaticResource KeyboardButtonStyle}"/>
        </Grid>
    </Grid>
</Window>
