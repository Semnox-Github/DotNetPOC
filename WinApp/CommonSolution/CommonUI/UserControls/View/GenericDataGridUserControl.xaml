<UserControl x:Class="Semnox.Parafait.CommonUI.GenericDataGridUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Semnox.Parafait.CommonUI"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d">

    <UserControl.Resources>

        <Style BasedOn="{StaticResource {x:Type local:CustomTextBlock}}"
               TargetType="{x:Type local:CustomTextBlock}"
               x:Key="MultiScreenCustomTextBlockStyle">
            <Setter Property="Margin"
                    Value="0,0,16,0" />
            <Setter Property="TextTrimming"
                    Value="CharacterEllipsis" />
            <Setter Property="FontWeight"
                    Value="{StaticResource FontWeight.Bold}" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding MultiScreenMode}"
                                   Value="True" />
                        <Condition Binding="{Binding IsMultiScreenRowTwo}"
                                   Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="TextSize"
                            Value="XSmall" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListBoxItem"
               x:Key="ContainerStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid x:Name="ContainerGrid"
                              UseLayoutRounding="True"
                              SnapsToDevicePixels="True">
                            <Border x:Name="ListBoxItemBackgroundBorder"
                                    Padding="16,0"
                                    Margin="0,0,8,16"
                                    CornerRadius="{StaticResource CornerRadius}">
                                <Border.Style>
                                    <Style BasedOn="{StaticResource ContentAreaBorderShadowStyle}"
                                           TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.MultiScreenItemBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GenericDataGridUserControl}}"
                                                         Value="Grey">
                                                <Setter Property="Background"
                                                        Value="{StaticResource ContentAreaSelectedItem.Background}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding DataContext.MultiScreenItemBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GenericDataGridUserControl}}"
                                                         Value="White">
                                                <Setter Property="Background"
                                                        Value="{StaticResource Control.BackGround}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <ItemsControl ItemsSource="{Binding DisplayItems,IsAsync=True}"
                                          Padding="16,0"
                                          Margin="0,0,8,16">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding DisplayItems.Count}"
                                                     Rows="1"
                                                     Width="{Binding ElementName=HeaderUniformGrid, Path=ActualWidth}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:CustomTextBlock x:Name="tbDisplayContent"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               Text="{Binding IsAsync=True}"
                                                               Style="{StaticResource MultiScreenCustomTextBlockStyle}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="{StaticResource Control.BorderBrush.Focused}" />
                                <Setter Property="BorderThickness"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="1" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="False">
                                <Setter Property="BorderBrush"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="{StaticResource Control.BorderBrush}" />
                                <Setter Property="BorderThickness"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="{StaticResource ContentArea.Items.BorderThickness}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding DataContext.MultiScreenMode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                         Value="True">
                                <Setter Property="MinHeight"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="80" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.MultiScreenMode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                         Value="False">
                                <Setter Property="MinHeight"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="80" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DataContext.MultiScreenMode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                               Value="True" />
                                    <Condition Binding="{Binding DataContext.IsMultiScreenRowTwo, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="MinHeight"
                                        TargetName="ListBoxItemBackgroundBorder"
                                        Value="40" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type local:CustomScrollViewer}}"
               TargetType="{x:Type local:CustomScrollViewer}"
               x:Key="MultiScreenCustomScrollViewerStyle">
            <Setter Property="Padding"
                    Value="0,0,8,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding MultiScreenMode}"
                             Value="True">
                    <Setter Property="Margin"
                            Value="0,16" />
                </DataTrigger>
                <DataTrigger Binding="{Binding MultiScreenMode}"
                             Value="False">
                    <Setter Property="Margin"
                            Value="0,16" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding MultiScreenMode}"
                                   Value="True" />
                        <Condition Binding="{Binding IsMultiScreenRowTwo}"
                                   Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Size"
                            Value="XSmall" />
                    <Setter Property="Margin"
                            Value="0" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="8*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0"
              Margin="0,0,0,8">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsComboAndSearchVisible}"
                                     Value="False">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <local:ComboGroupUserControl x:Name="GMComboBoxGroupUserControl"
                                         Grid.Column="0"
                                         HorizontalContentAlignment="Stretch"
                                         DataContext="{Binding ComboGroupVM}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="IsSelectionChanged">
                        <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                               Command="{Binding Path = DataContext.ComboSelectionChangedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </local:ComboGroupUserControl>

            <Button x:Name="btnSearch"
                    Grid.Column="1"
                    Margin="8,0,8,0"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GenericDataGridUserControl}}"
                    Command="{Binding SearchCommnad}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border x:Name="border"
                                            BorderBrush="{StaticResource Control.BorderBrush}"
                                            BorderThickness="{StaticResource BorderThickness}"
                                            CornerRadius="{StaticResource CornerRadius}"
                                            Background="{StaticResource Control.ComboBackground}"
                                            SnapsToDevicePixels="true"
                                            Style="{StaticResource ContentAreaBorderShadowStyle}">
                                        <Grid HorizontalAlignment="Center"
                                              VerticalAlignment="Center">
                                            <Path Data="M0 0H32V32H0z" />
                                            <Path Fill="{StaticResource Control.BorderBrush.Focused}"
                                                  Data="M11.787 0c3.284 0 6.09 1.173 8.4 3.51 2.31 2.338 3.468 5.156 3.468 8.44 0 2.793-.851 5.269-2.55 7.415l-.067.08.2.144 1.36.001.23.095L32 28.857 28.857 32l-9.09-9.174-.095-.228v-1.232l-.25-.215-.157.13c-1.89 1.491-4.035 2.325-6.427 2.5l-.482.027-.488.009c-3.283 0-6.09-1.159-8.4-3.469C1.159 18.038 0 15.232 0 11.95c0-3.283 1.158-6.101 3.467-8.438C5.777 1.173 8.557 0 11.787 0zm.081 4.227c-2.135 0-3.934.75-5.417 2.26-1.485 1.51-2.224 3.325-2.224 5.462 0 2.138.726 3.954 2.177 5.456 1.51 1.459 3.326 2.185 5.464 2.185 2.137 0 3.952-.739 5.463-2.223 1.509-1.484 2.26-3.283 2.26-5.418 0-2.135-.752-3.95-2.262-5.46-1.511-1.51-3.325-2.262-5.46-2.262z" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <local:CustomScrollViewer x:Name="scvParent"
                                  Grid.Row="1"
                                  HorizontalAlignment="Left"
                                  Width="{Binding Path = ViewportWidth,ElementName=scvList}"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Margin="16,0,0,0">
            <ItemsControl x:Name="HeaderUniformGrid"
                          ItemsSource="{Binding Headings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1"
                                     Columns="{Binding Headings.Count}">
                        </UniformGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:CustomTextBlock x:Name="tbHeaderContent"
                                               Text="{Binding}"
                                               Style="{StaticResource MultiScreenCustomTextBlockStyle}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </local:CustomScrollViewer>

        <local:CustomScrollViewer x:Name="scvList"
                                  Grid.Row="2"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Visible"
                                  Style="{StaticResource MultiScreenCustomScrollViewerStyle}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ScrollChanged">
                    <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                           Command="{Binding ScrollChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid Width="{Binding ElementName=HeaderUniformGrid, Path=ActualWidth}">
                <ListBox x:Name="lbContent"
                         BorderThickness="0"
                         ItemContainerStyle="{StaticResource ContainerStyle}"
                         SelectedItem="{Binding SelectedDisplayItem}"
                         ItemsSource="{Binding DisplayParams, IsAsync=True}"
                         VirtualizingStackPanel.IsVirtualizing="True"
                         VirtualizingStackPanel.VirtualizationMode="Recycling"
                         HorizontalContentAlignment="Stretch"
                         Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         Margin="0,3,0,-3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                                   Command="{Binding DataContext.SelectedItemCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}">
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}"
                                                   Command="{Binding DataContext.SelectedItemCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:GenericDataGridUserControl}}">
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
        </local:CustomScrollViewer>
    </Grid>
</UserControl>
