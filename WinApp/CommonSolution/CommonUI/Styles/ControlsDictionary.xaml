<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Semnox.Parafait.CommonUI;assembly=CommonUI"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <local:UpperCaseConverter x:Key="UpperCaseConverter" />
    <local:LowerCaseConverter x:Key="LowerCaseConverter" />
   
    <!--#region Style for redemption window style -->
    <Style x:Key="RedemptionWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="WindowState"
                Value="Maximized" />
        <Setter Property="WindowStyle"
                Value="{DynamicResource WindowStyle}" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator x:Name="ContentPresenter"
                                          Grid.Row="0"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="10">
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for redemption right section search button-->
    <Style TargetType="{x:Type Button}"
           x:Key="RedemptionShowContentAreaButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            Padding="0,3,0,0">
                        <Path Fill="{StaticResource Control.BorderBrush.Focused}"
                              Data="M9.132 0c-.181 0-.354.027-.516.081-.166.056-.318.14-.456.25a1.163 1.163 0 0 0-.458.926c0 .263.083.504.257.722l.094.106.107.097 12.276 9.897-12.13 9.78-.107.098c-.215.222-.33.495-.33.797 0 .361.164.676.459.914.275.222.61.332.986.332.26 0 .5-.053.73-.168l.136-.077.12-.087 13.263-10.693.108-.1a1.125 1.125 0 0 0 .072-1.508l-.094-.106-.107-.096L10.079.313 9.955.227A1.656 1.656 0 0 0 9.132 0zM1.43 0c-.181 0-.354.027-.516.081-.166.056-.319.14-.456.25A1.163 1.163 0 0 0 0 1.258c0 .263.083.504.256.722l.094.106.108.097 12.276 9.897-12.13 9.78-.107.098c-.215.222-.33.495-.33.797 0 .361.163.676.459.914.274.222.61.332.985.332.26 0 .501-.053.73-.168l.137-.077.12-.087L15.86 12.975l.107-.1a1.125 1.125 0 0 0 .073-1.508l-.094-.106-.107-.096L2.377.313 2.253.227A1.656 1.656 0 0 0 1.43 0z"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RenderTransformOrigin=".5,.5">
                            <Path.RenderTransform>
                                <RotateTransform Angle="180" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MultiScreenMode}"
                         Value="True">
                <Setter Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MultiScreenMode}"
                         Value="False">
                <Setter Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Style for redemption user control-->

    <Style TargetType="{x:Type Button}"
           x:Key="MultipleScreenButtonStyle">
        <Setter Property="Height"
                Value="{StaticResource Redemption.HeaderButton.Width}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource Redemption.Button.Background}"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Padding="8">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Path Fill="{StaticResource Redemption.Button.Foreground}"
                                  Grid.Column="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="0,0,4,0"
                                  Data="M35.116 24c.59 0 .884-.306.884-.917V.917C36 .306 35.705 0 35.116 0H.884C.294 0 0 .306 0 .917v22.166c0 .611.295.917.884.917h34.232zM33 21H3V3h30v18zM21.696 32l1.527-.083c1.232-.111 1.527-.417.884-.917-.214-.167-.549-.389-1.004-.667-.456-.277-.804-.514-1.045-.708-.241-.194-.362-.375-.362-.542 0-.222-.026-1.472-.08-3.75h-7.232l-.08 3.75c0 .167-.121.348-.362.542-.241.194-.59.43-1.045.708-.455.278-.79.5-1.004.667-.214.167-.322.306-.322.417-.053.389.858.583 2.733.583h7.392z"
                                  Stretch="Uniform" />
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="0,0,4,0"
                                  Fill="{StaticResource Redemption.Button.Foreground}"
                                  Data="M17.984 16.887l4.889-4.613a.429.429 0 0 0 0-.612L17.983 7.1a.427.427 0 0 0-.445-.065.398.398 0 0 0-.242.377v2.92H1.407a.407.407 0 0 0-.407.416v2.502c0 .235.178.417.407.417h15.89v2.92a.405.405 0 0 0 .688.3z"
                                  Stretch="Uniform" />
                            <Path Grid.Column="2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{StaticResource Redemption.Button.Foreground}"
                                  Data="M28.846 32c.872 0 1.616-.308 2.23-.923.616-.615.924-1.36.924-2.23V3.153c0-.872-.308-1.616-.923-2.23C30.462.307 29.717 0 28.847 0H3.153C2.282 0 1.538.308.924.923.307 1.538 0 2.283 0 3.153v25.693c0 .872.308 1.616.923 2.23.615.616 1.36.924 2.23.924h25.693zm0-22.385h-6.461V3.154h6.461v6.461zm-9.615 0h-6.462V3.154h6.462v6.461zm-9.616 0H3.154V3.154h6.461v6.461zm19.231 9.616h-6.461v-6.462h6.461v6.462zm-9.615 0h-6.462v-6.462h6.462v6.462zm-9.616 0H3.154v-6.462h6.461v6.462zm19.231 9.615h-6.461v-6.461h6.461v6.461zm-9.615 0h-6.462v-6.461h6.462v6.461zm-9.616 0H3.154v-6.461h6.461v6.461z"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="SingleScreenButtonStyle">
        <Setter Property="Height"
                Value="{StaticResource Redemption.HeaderButton.Width}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource Redemption.Button.Background}"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Padding="8">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{StaticResource Redemption.Button.Foreground}"
                                  Data="M28.846 32c.872 0 1.616-.308 2.23-.923.616-.615.924-1.36.924-2.23V3.153c0-.872-.308-1.616-.923-2.23C30.462.307 29.717 0 28.847 0H3.153C2.282 0 1.538.308.924.923.307 1.538 0 2.283 0 3.153v25.693c0 .872.308 1.616.923 2.23.615.616 1.36.924 2.23.924h25.693zm0-22.385h-6.461V3.154h6.461v6.461zm-9.615 0h-6.462V3.154h6.462v6.461zm-9.616 0H3.154V3.154h6.461v6.461zm19.231 9.616h-6.461v-6.462h6.461v6.462zm-9.615 0h-6.462v-6.462h6.462v6.462zm-9.616 0H3.154v-6.462h6.461v6.462zm19.231 9.615h-6.461v-6.461h6.461v6.461zm-9.615 0h-6.462v-6.461h6.462v6.461zm-9.616 0H3.154v-6.461h6.461v6.461z"
                                  Stretch="Uniform"
                                  Margin="0,0,4,0" />
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="0,0,4,0"
                                  Fill="{StaticResource Redemption.Button.Foreground}"
                                  Data="M17.984 16.887l4.889-4.613a.429.429 0 0 0 0-.612L17.983 7.1a.427.427 0 0 0-.445-.065.398.398 0 0 0-.242.377v2.92H1.407a.407.407 0 0 0-.407.416v2.502c0 .235.178.417.407.417h15.89v2.92a.405.405 0 0 0 .688.3z"
                                  Stretch="Uniform" />
                            <Path Fill="{StaticResource Redemption.Button.Foreground}"
                                  Grid.Column="2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M35.116 24c.59 0 .884-.306.884-.917V.917C36 .306 35.705 0 35.116 0H.884C.294 0 0 .306 0 .917v22.166c0 .611.295.917.884.917h34.232zM33 21H3V3h30v18zM21.696 32l1.527-.083c1.232-.111 1.527-.417.884-.917-.214-.167-.549-.389-1.004-.667-.456-.277-.804-.514-1.045-.708-.241-.194-.362-.375-.362-.542 0-.222-.026-1.472-.08-3.75h-7.232l-.08 3.75c0 .167-.121.348-.362.542-.241.194-.59.43-1.045.708-.455.278-.79.5-1.004.667-.214.167-.322.306-.322.417-.053.389.858.583 2.733.583h7.392z"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="AddUserButtonStyle">
        <Setter Property="Height"
                Value="{StaticResource Redemption.HeaderButton.Width}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource Redemption.Button.Background}"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Padding="8">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Ellipse Fill="{StaticResource Redemption.Button.Foreground}"
                                         Stretch="UniformToFill" />
                                <local:CustomTextBlock Text="{Binding DataContext.UserCount, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontWeight="{StaticResource FontWeight.Bold}" />
                            </Grid>
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{StaticResource Redemption.Button.Foreground}"
                                  Data="M15.983 0c2.751 0 5.118.982 7.073 2.934 1.956 1.954 2.94 4.328 2.94 7.096 0 2.767-.983 5.147-2.939 7.112-.674.677-1.415 1.24-2.224 1.685l-.35.184-.084.04.258.11c1.178.494 2.244 1.157 3.198 1.99l.313.283.305.296c1.104 1.11 1.957 2.39 2.557 3.835.622 1.492.946 3.058.97 4.7 0 .476-.172.895-.504 1.23-.332.333-.748.505-1.22.505-.471 0-.887-.172-1.219-.506-.332-.334-.504-.753-.504-1.228 0-2.394-.83-4.416-2.501-6.095-1.672-1.68-3.68-2.514-6.052-2.514-2.371 0-4.38.84-6.05 2.53-1.673 1.691-2.503 3.708-2.503 6.079 0 .475-.172.894-.504 1.228-.332.334-.748.506-1.22.506-.471 0-.887-.172-1.219-.506C4.172 31.16 4 30.741 4 30.266c0-1.638.312-3.207.935-4.7.6-1.447 1.453-2.726 2.557-3.836 1.003-1.008 2.147-1.808 3.412-2.39l.384-.169.271-.123-.077-.037c-.72-.36-1.39-.807-2.01-1.343l-.305-.275-.26-.253c-1.932-1.965-2.904-4.344-2.904-7.11 0-2.767.978-5.141 2.923-7.095C10.869.982 13.23 0 15.983 0zm0 3.469c-1.808 0-3.338.637-4.619 1.924-1.28 1.286-1.913 2.822-1.913 4.637 0 1.816.629 3.36 1.896 4.654 1.292 1.299 2.828 1.942 4.636 1.942 1.806 0 3.336-.643 4.617-1.94 1.28-1.298 1.915-2.84 1.915-4.656 0-1.815-.634-3.351-1.914-4.637-1.28-1.287-2.81-1.924-4.618-1.924z"
                                  Stretch="Uniform"
                                  Margin="4,0" />
                            <Grid Grid.Column="2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="0,0,4,0">
                                <Path Data="M13.5 0L13.5 10.5 24 10.5 24 13.5 13.5 13.5 13.5 24 10.5 24 10.5 13.5 0 13.5 0 10.5 10.5 10.5 10.5 0z"
                                      Fill="{StaticResource Redemption.Button.Foreground}"
                                      Stretch="Uniform" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="DeleteButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H32V32H0z" />
                            <Path x:Name="deletePath"
                                  Data="M21.436 0c.789 0 1.48.285 2.05.845.507.499.794 1.1.851 1.787l.01.261v1.568h5.918c.349 0 .664.087.935.257l.158.112.147.132c.327.329.495.74.495 1.208 0 .452-.18.853-.52 1.181-.29.278-.634.441-1.019.482l-.196.01h-.24l.001 21.264c0 .618-.176 1.174-.523 1.655l-.16.201-.18.192c-.505.498-1.108.778-1.79.834l-.258.011H5.232c-.79 0-1.48-.285-2.05-.845-.507-.499-.794-1.1-.851-1.787l-.011-.261-.001-21.264h-.62c-.332 0-.637-.086-.903-.256L.64 7.475l-.146-.131C.17 7.015 0 6.61 0 6.153c0-.458.169-.863.495-1.191.281-.283.623-.448 1.008-.49l.197-.01L7.65 4.46l.001-1.568c0-.617.172-1.171.51-1.651l.156-.202.176-.192c.497-.5 1.104-.781 1.803-.837L10.564 0h10.872zm5.225 7.843H5.685v20.81H26.66V7.842zM12.367 11.12c.415 0 .781.139 1.058.388l.113.114c.299.273.474.615.518 1.006l.01.2V24.47c0 .468-.168.88-.495 1.209-.327.33-.738.5-1.204.5-.467 0-.877-.17-1.205-.5-.28-.282-.444-.625-.485-1.012l-.01-.197V12.828c0-.468.168-.88.495-1.208.328-.33.738-.5 1.205-.5zm8 0c.415 0 .781.139 1.058.388l.113.114c.299.273.474.615.518 1.006l.01.2V24.47c0 .468-.168.88-.495 1.209-.327.33-.738.5-1.204.5-.467 0-.877-.17-1.205-.5-.28-.282-.444-.625-.485-1.012l-.01-.197V12.828c0-.468.168-.88.495-1.208.328-.33.738-.5 1.205-.5zm.614-7.739h-9.999v1.08h10V3.38z"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter Property="Fill"
                                    TargetName="deletePath"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="deletePath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="RedemptionResetButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H32V32H0z" />
                            <Path Data="M16.333 0c2.396 0 4.631.588 6.707 1.765 2.023 1.125 3.62 2.66 4.79 4.604 1.225 1.996 1.837 4.144 1.837 6.446 0 2.303-.612 4.451-1.837 6.446-1.17 1.919-2.767 3.44-4.79 4.566-2.05 1.151-4.285 1.727-6.707 1.727V32L7.99 23.98l8.343-8.018v6.446c1.81 0 3.48-.429 5.01-1.286 1.53-.857 2.741-2.02 3.633-3.491.892-1.471 1.337-3.076 1.337-4.816 0-1.74-.445-3.344-1.337-4.815-.892-1.47-2.102-2.635-3.633-3.492-1.53-.857-3.2-1.285-5.01-1.285-1.81 0-3.48.428-5.01 1.285C9.793 5.365 8.583 6.53 7.691 8c-.892 1.47-1.338 3.076-1.338 4.815H3c0-2.302.612-4.45 1.836-6.446 1.171-1.944 2.768-3.479 4.79-4.604C11.704.588 13.939 0 16.334 0z"
                                  Fill="{StaticResource Control.BorderBrush.Focused}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for GenericDisplayItemControl-->

    <Style TargetType="{x:Type Button}"
           x:Key="OfferButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Grid>
                            <Path Data="M0 0H24V24H0z" />
                            <Path x:Name="OfferIconPath"
                                  Data="M10.469.59c.804-.745 2.04-.785 2.89-.117l.137.118 1.525 1.414c.137.127.315.197.502.199l.113-.007 2.1-.285c1.116-.152 2.147.525 2.416 1.557l.033.15.367 2.003c.033.18.134.337.284.444l.096.058 1.874.954c.993.505 1.413 1.63 1.003 2.614l-.068.147-.931 1.828c-.084.164-.098.348-.042.52l.042.1.931 1.828c.494.969.145 2.115-.79 2.68l-.145.081-1.874.953c-.168.086-.293.228-.352.397l-.028.105-.367 2.004c-.194 1.065-1.183 1.796-2.29 1.723l-.159-.016-2.1-.285c-.189-.026-.376.018-.528.122l-.087.07-1.525 1.414c-.424.394-.969.59-1.513.59-.485 0-.969-.155-1.368-.466l-.146-.124-1.525-1.415c-.137-.127-.315-.196-.502-.198l-.113.007-2.1.285c-.105.014-.209.02-.312.02-.988 0-1.855-.638-2.102-1.57l-.035-.157-.367-2.004c-.033-.18-.134-.337-.284-.444l-.096-.058-1.874-.953c-.993-.506-1.413-1.63-1.003-2.615l.068-.146.931-1.828c.084-.164.098-.349.042-.52l-.042-.1-.931-1.828c-.494-.97-.145-2.115.79-2.68l.146-.081 1.873-.954c.169-.085.293-.227.353-.397l.027-.105.367-2.003c.195-1.065 1.184-1.797 2.29-1.723l.159.016 2.1.285c.189.025.376-.019.528-.122l.087-.07L10.47.591zm2.017 1.599c-.245-.227-.616-.25-.886-.068l-.086.068-1.446 1.335c-.415.383-.966.58-1.535.552l-.19-.017-1.993-.27c-.341-.045-.658.148-.762.452l-.024.094-.348 1.891c-.1.549-.431 1.02-.916 1.317l-.15.084-1.778.9c-.304.154-.44.488-.338.792l.038.09.884 1.725c.253.496.279 1.056.076 1.564l-.076.168-.884 1.725c-.151.295-.056.642.214.83l.086.052 1.778.9c.515.26.883.706 1.03 1.238l.036.163.348 1.891c.06.324.35.551.685.552l.101-.007 1.992-.269c.099-.013.197-.02.295-.02.472 0 .928.154 1.297.441l.134.114 1.446 1.335c.245.227.616.25.886.068l.086-.068 1.446-1.335c.415-.383.966-.58 1.535-.552l.19.017 1.993.27c.341.045.658-.148.762-.452l.024-.094.348-1.891c.1-.549.431-1.02.916-1.317l.15-.084 1.778-.9c.304-.154.44-.488.338-.792l-.038-.09-.884-1.725c-.253-.496-.279-1.056-.076-1.564l.076-.168.884-1.725c.151-.295.056-.642-.214-.83l-.086-.052-1.778-.9c-.515-.26-.883-.706-1.03-1.238l-.036-.163-.348-1.891c-.06-.324-.35-.551-.685-.552l-.101.007-1.992.269c-.572.077-1.139-.073-1.583-.414l-.143-.121-1.446-1.335zm2.378 10.939c1.456 0 2.64 1.136 2.64 2.533 0 1.396-1.184 2.533-2.64 2.533-1.457 0-2.641-1.137-2.641-2.533 0-1.397 1.184-2.533 2.64-2.533zm1.363-6.199c.28-.27.737-.27 1.018 0 .253.243.279.622.076.892l-.076.085-9.507 9.118c-.14.135-.325.202-.509.202s-.369-.067-.51-.202c-.252-.243-.278-.621-.075-.891l.076-.086 9.507-9.118zm-1.363 7.58c-.662 0-1.2.517-1.2 1.152 0 .635.538 1.151 1.2 1.151.661 0 1.2-.516 1.2-1.151s-.539-1.151-1.2-1.151zM9.102 5.76c1.456 0 2.64 1.137 2.64 2.534 0 1.396-1.184 2.533-2.64 2.533-1.457 0-2.641-1.137-2.641-2.533 0-1.397 1.184-2.533 2.64-2.533zm0 1.382c-.662 0-1.2.517-1.2 1.152 0 .635.538 1.151 1.2 1.151.661 0 1.2-.516 1.2-1.151s-.539-1.152-1.2-1.152z"
                                  Fill="{StaticResource Control.Heading.ForeGround}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="OfferIconPath"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="InfoButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Grid>
                            <Path Data="M0 0H24V24H0z" />
                            <Path x:Name="InfoIconPath"
                                  Data="M12 24c2.192 0 4.221-.548 6.087-1.644 1.807-1.039 3.23-2.462 4.269-4.27C23.452 16.222 24 14.193 24 12s-.548-4.221-1.644-6.087c-1.039-1.807-2.462-3.23-4.27-4.269C16.222.548 14.193 0 12 0 9.827 0 7.808.548 5.942 1.644c-1.807 1.058-3.24 2.49-4.298 4.298C.548 7.808 0 9.827 0 12s.548 4.192 1.644 6.058c1.039 1.807 2.462 3.24 4.27 4.298C7.778 23.452 9.807 24 12 24zm0-2.365c-1.73 0-3.346-.443-4.846-1.327-1.462-.846-2.616-2-3.462-3.462-.884-1.5-1.327-3.115-1.327-4.846 0-1.73.443-3.346 1.327-4.846.846-1.462 2-2.616 3.462-3.462 1.5-.884 3.115-1.327 4.846-1.327 1.73 0 3.346.443 4.846 1.327 1.462.846 2.616 2 3.462 3.462.884 1.5 1.327 3.115 1.327 4.846 0 1.73-.443 3.346-1.327 4.846-.846 1.462-2 2.616-3.462 3.462-1.5.884-3.115 1.327-4.846 1.327zm1.183-13.24V5.97h-2.366v2.423h2.366zm0 9.634v-7.212h-2.366v7.212h2.366z"
                                  Fill="{StaticResource Control.Heading.ForeGround}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="InfoIconPath"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GenericDisplayItemControl}">
        <Setter Property="Background"
                Value="{StaticResource Grid.Background}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontStretch"
                Value="{StaticResource FontStretch}" />
        <Setter Property="Foreground"
                Value="{StaticResource Control.Heading.ForeGround}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GenericDisplayItemControl}">
                    <Border x:Name="GenericDisplayItemMainBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource CornerRadius}"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3">
                        <Grid Margin="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="9*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <local:CustomTextBlock x:Name="tbHeading"
                                                   TextTrimming="CharacterEllipsis"
                                                   FontFamily="{StaticResource FontFamily}"
                                                   FontStretch="{StaticResource FontStretch}"
                                                   FontWeight="{StaticResource FontWeight.Bold}"
                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}"
                                                   TextSize="Small"
                                                   Grid.Row="0"
                                                   Grid.Column="0" />
                            <Button x:Name="btnOfferOrIntro"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Width="36"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Visibility="Hidden"
                                    IsEnabled="{TemplateBinding IsEnabled}" />
                            <ItemsControl ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                                          Grid.Row="1"
                                          Grid.ColumnSpan="2"
                                          VerticalAlignment="Bottom"
                                          VerticalContentAlignment="Bottom"
                                          Margin="0,8,0,0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="{Binding ItemsSource.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GenericDisplayItemControl}}"
                                                     Rows="1" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:CustomDiscountTextBlock x:Name="tbDisplayItem"
                                                                       VerticalAlignment="Bottom"
                                                                       FontFamily="{StaticResource FontFamily}"
                                                                       FontStretch="{StaticResource FontStretch}"
                                                                       Content="{Binding OriginalValue}"
                                                                       DiscountContent="{Binding DiscountValue}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                            <Setter Property="Foreground"
                                    TargetName="tbHeading"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Disabled.Background}" />
                        </Trigger>
                        <Trigger Property="ButtonType"
                                 Value="Offer">
                            <Setter Property="Style"
                                    TargetName="btnOfferOrIntro"
                                    Value="{StaticResource OfferButtonStyle}" />
                            <Setter Property="Visibility"
                                    TargetName="btnOfferOrIntro"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="ButtonType"
                                 Value="Info">
                            <Setter Property="Style"
                                    TargetName="btnOfferOrIntro"
                                    Value="{StaticResource InfoButtonStyle}" />
                            <Setter Property="Visibility"
                                    TargetName="btnOfferOrIntro"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for Numberic Counter -->

    <Style TargetType="{x:Type local:CustomNumericUpDown}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="FontWeight"
                 Value="{StaticResource FontWeight.Bold}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomNumericUpDown}">
                    <StackPanel>
                        <local:CustomTextBlock x:Name="tbCustomNumericHeader"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding Heading,RelativeSource={RelativeSource TemplatedParent}}"
                                               FontWeight="{TemplateBinding FontWeight}" />
                        <Border x:Name="CustomNumeric_Grid_Row_MainContent_Border"
                                Margin="0,8,0,0"
                                CornerRadius="{StaticResource CornerRadius}"
                                BorderBrush="{StaticResource Control.BorderBrush}"
                                BorderThickness="{StaticResource Control.Border.Thickness}"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="MainContent_Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border x:Name="CustomNumeric_Grid_Row_Content_Border"
                                        Grid.Column="0"
                                        CornerRadius="{StaticResource CornerRadius}"
                                        BorderBrush="{StaticResource Control.BorderBrush}"
                                        BorderThickness="{StaticResource Control.Border.Thickness}"
                                        Background="{TemplateBinding Background}">
                                    <Grid x:Name="CustomNumeric_Content_Area_Grid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"
                                                              x:Name="CustomNumeric_Grid_Content_NumericDown" />
                                            <ColumnDefinition Width="6*"
                                                              x:Name="CustomNumeric_Grid_Content_TextBox" />
                                            <ColumnDefinition Width="Auto"
                                                              x:Name="CustomNumeric_Grid_Content_NumericUp" />
                                        </Grid.ColumnDefinitions>

                                        <Button x:Name="btnCustomNumericDown"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Grid.Column="0">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border x:Name="CountDownButtonOutsideBorder"
                                                                        BorderBrush="{StaticResource Control.BorderBrush}"
                                                                        BorderThickness="0,0,0,3"
                                                                        CornerRadius="{StaticResource CornerRadius}"
                                                                        Background="{TemplateBinding Background}">
                                                                    <Grid x:Name="CountDownButtonGrid"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center">
                                                                        <Path  Data="M0 0H24V24H0z" />
                                                                        <Path  Data="M24 10.5L24 13.5 0 13.5 0 10.5z"
                                                                               Fill="{StaticResource Control.BorderBrush.Focused}" />
                                                                    </Grid>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Border x:Name="CustomNumericTextBoxOuterBorder"
                                                Background="Transparent"
                                                HorizontalAlignment="Stretch"
                                                Grid.Column="1">
                                            <Grid x:Name="CustomNumericContentAreaGrid"
                                                  Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox x:Name="txtCustomNumericResultBox"
                                                         Grid.Column="0"
                                                         Grid.ColumnSpan="2"
                                                         FontSize="{StaticResource FontSize.Large}"
                                                         FontWeight="{StaticResource FontWeight.Bold}"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Stretch"
                                                         BorderThickness="0"
                                                         HorizontalContentAlignment="Center" />

                                                <local:CustomTextBlock x:Name="tbCustomNumericMaxSizeResult"
                                                                       Grid.Column="1"
                                                                       Visibility="Collapsed"
                                                                       TextTrimming="CharacterEllipsis"
                                                                       Text="{Binding MaxValue,RelativeSource={RelativeSource TemplatedParent},StringFormat=' of {0} '}"
                                                                       VerticalAlignment="Center"
                                                                       TextAlignment="Left"
                                                                       FontSize="{StaticResource FontSize.Large}"
                                                                       FontWeight="{StaticResource FontWeight.Bold}" />

                                            </Grid>
                                        </Border>

                                        <Button x:Name="btnCustomNumericUp"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Grid.Column="2">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border x:Name="CountUpButtonOutsideBorder"
                                                                        BorderBrush="{StaticResource Control.BorderBrush}"
                                                                        BorderThickness="0,0,0,3"
                                                                        CornerRadius="{StaticResource CornerRadius}"
                                                                        Background="{TemplateBinding Background}">
                                                                    <Grid x:Name="CountUpButtonGrid"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center">
                                                                        <Path Data="M0 0H24V24H0z" />
                                                                        <Path Data="M13.5 0L13.5 10.5 24 10.5 24 13.5 13.5 13.5 13.5 24 10.5 24 10.5 13.5 0 13.5 0 10.5 10.5 10.5 10.5 0z"
                                                                              Fill="{StaticResource Control.BorderBrush.Focused}" />
                                                                    </Grid>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="1"
                                        x:Name="CustomNumericTextBlockTypeBorder">
                                    <UniformGrid Rows="2">
                                        <local:CustomTextBlock x:Name="tbHeader"
                                                               Text="{Binding TextBlockHeading,RelativeSource={RelativeSource TemplatedParent}}" />
                                        <local:CustomTextBlock x:Name="tbRemaining"
                                                               Text="{Binding RemainingBalance,RelativeSource={RelativeSource TemplatedParent}}"
                                                               FontWeight="{StaticResource FontWeight.Bold}" />
                                    </UniformGrid>
                                </Border>
                                <Button x:Name="btnReset"
                                        Grid.Column="1"
                                        Command="{Binding ResetCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background"
                                                    Value="{StaticResource Action.Active.Background}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                BorderBrush="{StaticResource Control.BorderBrush}"
                                                                BorderThickness="0,0,0,3"
                                                                CornerRadius="{StaticResource GenericCounterReset.CornerRadius}"
                                                                Background="{TemplateBinding Background}">
                                                            <Grid x:Name="ResetButtonGrid"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center">
                                                                <Path Data="M0 0H32V32H0z" />
                                                                <Path Data="M16.333 0c2.396 0 4.631.588 6.707 1.765 2.023 1.125 3.62 2.66 4.79 4.604 1.225 1.996 1.837 4.144 1.837 6.446 0 2.303-.612 4.451-1.837 6.446-1.17 1.919-2.767 3.44-4.79 4.566-2.05 1.151-4.285 1.727-6.707 1.727V32L7.99 23.98l8.343-8.018v6.446c1.81 0 3.48-.429 5.01-1.286 1.53-.857 2.741-2.02 3.633-3.491.892-1.471 1.337-3.076 1.337-4.816 0-1.74-.445-3.344-1.337-4.815-.892-1.47-2.102-2.635-3.633-3.492-1.53-.857-3.2-1.285-5.01-1.285-1.81 0-3.48.428-5.01 1.285C9.793 5.365 8.583 6.53 7.691 8c-.892 1.47-1.338 3.076-1.338 4.815H3c0-2.302.612-4.45 1.836-6.446 1.171-1.944 2.768-3.479 4.79-4.604C11.704.588 13.939 0 16.334 0z"
                                                                      Fill="{StaticResource Control.BackGround}" />
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button x:Name="btnAdd"
                                        Grid.Column="1"
                                        Content="{Binding ButtonText,RelativeSource={RelativeSource TemplatedParent}}"
                                        Command="{Binding AddCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="FontSize"
                                                    Value="{StaticResource FontSize.Small}" />
                                            <Setter Property="Background"
                                                    Value="{StaticResource Action.Active.Background}" />
                                            <Setter Property="Foreground"
                                                    Value="{StaticResource Action.Active.Foreground}" />
                                            <Setter Property="FontWeight"
                                                    Value="{StaticResource FontWeight.Bold}" />
                                            <Setter Property="FontFamily"
                                                    Value="{StaticResource FontFamily}" />
                                            <Setter Property="HorizontalContentAlignment"
                                                    Value="Center" />
                                            <Setter Property="VerticalContentAlignment"
                                                    Value="Center" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                BorderBrush="{StaticResource Control.BorderBrush}"
                                                                BorderThickness="0,0,0,3"
                                                                CornerRadius="{StaticResource GenericCounterReset.CornerRadius}"
                                                                Background="{TemplateBinding Background}"
                                                                SnapsToDevicePixels="True">
                                                            <TextBlock x:Name="tbButtonContent"
                                                                       Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"
                                                                       TextWrapping="Wrap"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                       Margin="{TemplateBinding Padding}"
                                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button x:Name="btnDelete"
                                        Grid.Column="1">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border"
                                                                Background="{TemplateBinding Background}">
                                                            <Grid x:Name="ResetButtonGrid"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center">
                                                                <Path Data="M0 0H32V32H0z" />
                                                                <Path Data="M21.436 0c.789 0 1.48.285 2.05.845.507.499.794 1.1.851 1.787l.01.261v1.568h5.918c.349 0 .664.087.935.257l.158.112.147.132c.327.329.495.74.495 1.208 0 .452-.18.853-.52 1.181-.29.278-.634.441-1.019.482l-.196.01h-.24l.001 21.264c0 .618-.176 1.174-.523 1.655l-.16.201-.18.192c-.505.498-1.108.778-1.79.834l-.258.011H5.232c-.79 0-1.48-.285-2.05-.845-.507-.499-.794-1.1-.851-1.787l-.011-.261-.001-21.264h-.62c-.332 0-.637-.086-.903-.256L.64 7.475l-.146-.131C.17 7.015 0 6.61 0 6.153c0-.458.169-.863.495-1.191.281-.283.623-.448 1.008-.49l.197-.01L7.65 4.46l.001-1.568c0-.617.172-1.171.51-1.651l.156-.202.176-.192c.497-.5 1.104-.781 1.803-.837L10.564 0h10.872zm5.225 7.843H5.685v20.81H26.66V7.842zM12.367 11.12c.415 0 .781.139 1.058.388l.113.114c.299.273.474.615.518 1.006l.01.2V24.47c0 .468-.168.88-.495 1.209-.327.33-.738.5-1.204.5-.467 0-.877-.17-1.205-.5-.28-.282-.444-.625-.485-1.012l-.01-.197V12.828c0-.468.168-.88.495-1.208.328-.33.738-.5 1.205-.5zm8 0c.415 0 .781.139 1.058.388l.113.114c.299.273.474.615.518 1.006l.01.2V24.47c0 .468-.168.88-.495 1.209-.327.33-.738.5-1.204.5-.467 0-.877-.17-1.205-.5-.28-.282-.444-.625-.485-1.012l-.01-.197V12.828c0-.468.168-.88.495-1.208.328-.33.738-.5 1.205-.5zm.614-7.739h-9.999v1.08h10V3.38z"
                                                                      Fill="{StaticResource Control.BorderBrush.Focused}" />
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomNumericHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="NumericButtonType"
                                 Value="TextBlock">
                            <Setter Property="Visibility"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="Visible" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter Property="BorderThickness"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="0,0,1,0" />
                            <Setter Property="CornerRadius"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.TextBlock.CornerRadius}" />
                            <Setter Property="Visibility"
                                    TargetName="btnReset"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnDelete"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnAdd"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="NumericButtonType"
                                 Value="None">
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter Property="Visibility"
                                    TargetName="btnReset"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnDelete"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnAdd"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="NumericButtonType"
                                 Value="Reset">
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Value="{StaticResource GenericNumericUpDownReset.Padding}" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="btnAdd"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnDelete"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="NumericButtonType"
                                 Value="Text">
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Value="{StaticResource GenericNumericUpDownReset.Padding}" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="btnReset"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnDelete"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="NumericButtonType"
                                 Value="Delete">
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Value="{StaticResource GenericNumericUpDownReset.Padding}" />
                            <Setter Property="Padding"
                                    TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Value="{StaticResource GenericNumericUpDown.Padding}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="btnAdd"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="btnReset"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="CustomNumericTextBlockTypeBorder"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMaxSizeDisplay"
                                 Value="True">
                            <Setter Property="Grid.ColumnSpan"
                                    TargetName="txtCustomNumericResultBox"
                                    Value="1" />
                            <Setter Property="Visibility"
                                    TargetName="tbCustomNumericMaxSizeResult"
                                    Value="Visible" />
                            <Setter Property="HorizontalAlignment"
                                    TargetName="CustomNumericContentAreaGrid"
                                    Value="Center" />
                            <Setter Property="VerticalAlignment"
                                    TargetName="CustomNumericContentAreaGrid"
                                    Value="Center" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    TargetName="txtCustomNumericResultBox"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="FontSize"
                                    TargetName="tbCustomNumericMaxSizeResult"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Width"
                                    TargetName="btnReset"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnAdd"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnDelete"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomNumericHeader"
                                    Value="Large" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    TargetName="txtCustomNumericResultBox"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="FontSize"
                                    TargetName="tbCustomNumericMaxSizeResult"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Width"
                                    TargetName="btnReset"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnAdd"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnDelete"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomNumericHeader"
                                    Value="Medium" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    TargetName="txtCustomNumericResultBox"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="FontSize"
                                    TargetName="tbCustomNumericMaxSizeResult"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Width"
                                    TargetName="btnReset"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnAdd"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnDelete"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomNumericHeader"
                                    Value="Small" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    TargetName="txtCustomNumericResultBox"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="FontSize"
                                    TargetName="tbCustomNumericMaxSizeResult"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericDown"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomNumericUp"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Width"
                                    TargetName="btnReset"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnAdd"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="Width"
                                    TargetName="btnDelete"
                                    Value="{StaticResource GenericCounterResetWidth}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomNumericHeader"
                                    Value="XSmall" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NumericButtonType"
                                           Value="None">
                                </Condition>
                                <Condition Property="IsMouseOver"
                                           Value="True">

                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="1,1,1,1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NumericButtonType"
                                           Value="Reset">
                                </Condition>
                                <Condition Property="IsMouseOver"
                                           Value="True">

                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderThickness"
                                    Value="1,1,1,1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NumericButtonType"
                                           Value="Text">
                                </Condition>
                                <Condition Property="IsMouseOver"
                                           Value="True">

                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderThickness"
                                    Value="1,1,1,1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NumericButtonType"
                                           Value="Delete">
                                </Condition>
                                <Condition Property="IsMouseOver"
                                           Value="True">

                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_Content_Border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter TargetName="CustomNumeric_Grid_Row_MainContent_Border"
                                    Property="BorderThickness"
                                    Value="1,1,1,1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="AddButtonStyle">
        <Setter Property="FontSize"
                Value="{StaticResource FontSize.Small}" />
        <Setter Property="Background"
                Value="{StaticResource Action.Active.Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource Action.Active.Foreground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource GenericCounterReset.CornerRadius}"
                            Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="ResetButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource Action.Active.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource GenericCounterReset.CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="ResetButtonGrid"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H32V32H0z" />
                            <Path Data="M16.333 0c2.396 0 4.631.588 6.707 1.765 2.023 1.125 3.62 2.66 4.79 4.604 1.225 1.996 1.837 4.144 1.837 6.446 0 2.303-.612 4.451-1.837 6.446-1.17 1.919-2.767 3.44-4.79 4.566-2.05 1.151-4.285 1.727-6.707 1.727V32L7.99 23.98l8.343-8.018v6.446c1.81 0 3.48-.429 5.01-1.286 1.53-.857 2.741-2.02 3.633-3.491.892-1.471 1.337-3.076 1.337-4.816 0-1.74-.445-3.344-1.337-4.815-.892-1.47-2.102-2.635-3.633-3.492-1.53-.857-3.2-1.285-5.01-1.285-1.81 0-3.48.428-5.01 1.285C9.793 5.365 8.583 6.53 7.691 8c-.892 1.47-1.338 3.076-1.338 4.815H3c0-2.302.612-4.45 1.836-6.446 1.171-1.944 2.768-3.479 4.79-4.604C11.704.588 13.939 0 16.334 0z"
                                  Fill="{StaticResource Control.BackGround}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom toggle button -->

    <Style TargetType="{x:Type local:CustomToggleButton}">
        <Setter Property="Background"
                Value="{StaticResource CustomToggleButton.UnChecked.Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource CustomToggleButton.UnChecked.Foreground}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontStretch"
                Value="{StaticResource FontStretch}" />
        <Setter Property="IsEnabled"
                Value="{Binding IsEnabled}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomToggleButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ItemsControl ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                      Margin="8">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Margin="16,-2,16,-2"
                                                 Rows="{Binding ItemsSource.Count, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Columns="1" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:CustomTextBlock x:Name="tbDisplayContent"
                                                           VerticalAlignment="{Binding DataContext.VerticalAlignment,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomToggleButton}}"
                                                           TextTrimming="CharacterEllipsis"
                                                           HorizontalAlignment="{Binding HorizontalAlignment}"
                                                           TextSize="{Binding TextSize}"
                                                           Text="{Binding Text}"
                                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomToggleButton}}"
                                                           FontWeight="{Binding FontWeight}"
                                                           Margin="0,-4,0,-2" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomToggleButton}}"
                                                     Value="1">
                                            <Setter Property="VerticalAlignment"
                                                    TargetName="tbDisplayContent"
                                                    Value="Center" />
                                            <Setter Property="FontWeight"
                                                    TargetName="tbDisplayContent"
                                                    Value="{StaticResource FontWeight.Bold}" />
                                            <Setter Property="TextSize"
                                                    TargetName="tbDisplayContent"
                                                    Value="Medium" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Checked.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource CustomToggleButton.Checked.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Disabled.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion -->

    <Style TargetType="{x:Type Button}"
               x:Key="FontPickerButtonStyle">
        <Setter Property="HorizontalAlignment"
                    Value="Center"/>
        <Setter Property="VerticalAlignment"
                    Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OuterBorder"
                            Padding="4,2"
                            CornerRadius="2"
                            Background="{StaticResource Control.BorderBrush.Focused}">
                        <Path x:Name="lettersPath"
                              Fill="{StaticResource Control.BackGround}"
                              Stretch="Uniform">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 4.02 19.57 c 1.37 -3.11 2.74 -6.23 4.11 -9.34 c 0.38 -0.85 1.1 -1.19 2 -0.98 c 0.55 0.13 0.87 0.5 1.09 0.99 c 0.42 0.94 0.83 1.88 1.25 2.82 c 0.89 2 1.77 4 2.66 6 c 0.2 0.45 0.25 0.89 -0.04 1.32 c -0.49 0.72 -1.6 0.68 -2.01 -0.09 c -0.31 -0.58 -0.56 -1.19 -0.81 -1.8 c -0.08 -0.2 -0.18 -0.26 -0.4 -0.26 c -1.49 0.01 -2.98 0.01 -4.48 0 c -0.2 0 -0.31 0.05 -0.38 0.25 c -0.22 0.55 -0.45 1.1 -0.7 1.64 c -0.26 0.57 -0.78 0.86 -1.35 0.75 c -0.44 -0.08 -0.73 -0.34 -0.88 -0.76 c -0.02 -0.07 -0.05 -0.13 -0.07 -0.2 C 4.02 19.79 4.02 19.68 4.02 19.57 Z M 11.23 16 c -0.53 -1.27 -1.05 -2.49 -1.59 -3.77 C 9.11 13.52 8.59 14.75 8.06 16 C 9.13 16 10.16 16 11.23 16 Z M 22.15 19.84 c -0.4 0.41 -0.81 0.71 -1.31 0.88 c -0.92 0.31 -1.84 0.31 -2.74 -0.05 c -1.14 -0.46 -1.74 -1.57 -1.56 -2.8 c 0.19 -1.28 0.98 -2.06 2.37 -2.31 c 1.01 -0.18 2.02 -0.13 3 0.18 c 0.06 0.02 0.12 0.04 0.18 0.05 c 0.01 0 0.03 0 0.05 0 c 0.18 -0.71 -0.35 -1.48 -1.14 -1.65 c -0.75 -0.16 -1.5 -0.07 -2.24 0.11 c -0.2 0.05 -0.4 0.11 -0.6 0.11 c -0.49 -0.01 -0.89 -0.38 -0.95 -0.83 c -0.07 -0.53 0.18 -0.98 0.7 -1.13 c 0.58 -0.17 1.18 -0.32 1.79 -0.39 c 0.79 -0.1 1.58 -0.09 2.36 0.11 c 1.4 0.37 2.21 1.28 2.4 2.72 c 0.04 0.27 0.06 0.55 0.06 0.82 c 0.01 1.33 0.01 2.65 0 3.98 c -0.01 0.86 -0.7 1.4 -1.52 1.2 C 22.53 20.71 22.23 20.4 22.15 19.84 Z M 20.66 16.87 c -0.01 0.02 -0.01 0.03 -0.02 0.05 c -0.2 0.02 -0.39 0.03 -0.58 0.07 c -0.14 0.02 -0.28 0.06 -0.41 0.11 c -0.53 0.21 -0.79 0.63 -0.73 1.2 c 0.04 0.44 0.39 0.82 0.91 0.88 c 0.36 0.04 0.74 0.04 1.09 -0.04 c 0.9 -0.18 1.38 -0.86 1.29 -1.76 c -0.01 -0.06 -0.08 -0.16 -0.14 -0.17 C 21.6 17.09 21.13 16.98 20.66 16.87 Z"/>
                                    <RectangleGeometry Rect="26.76,9.19,1.22,13.63"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                     Value="False">
                            <Setter Property="Background"
                                        TargetName="OuterBorder"
                                        Value="{StaticResource Control.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CommonIconButtonStyle"
               TargetType="{x:Type Button}">
        <Setter Property="Background"
                    Value="{StaticResource Action.Active.Background}"/>
        <Setter Property="Foreground"
                    Value="{StaticResource Action.Active.Foreground}"/>
        <Setter Property="Width"
                    Value="{StaticResource CustomDataGrid.ActionButton.Width}" />
        <Setter Property="Height"
                    Value="{Binding Path=Width,RelativeSource={RelativeSource Self}}" />
        <Setter Property="MaxHeight"
                    Value="{Binding Path=Width,RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                         Value="False">
                <Setter Property="Background"
                            Value="{StaticResource Action.Disabled.Background}"/>
                <Setter Property="Foreground"
                            Value="{StaticResource Action.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}"
               x:Key="CompleteButtonStyle"
              BasedOn="{StaticResource CommonIconButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ImageBorder" 
                            CornerRadius="{StaticResource CornerRadius}" 
                            Background="{TemplateBinding Background}"
                            Padding="8">
                        <Canvas x:Name="ImageCanvas"  
                                Background="Transparent">
                            <Path Stretch="None"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M23.61,21.51a9.75,9.75,0,0,1-2.39,2.32,9.45,9.45,0,0,1-14.41-5.4H3.18A13.77,13.77,0,0,0,4,21.06a13,13,0,0,0,12,7.93A13,13,0,0,0,26.7,23.26a12.57,12.57,0,0,0,1-1.75Z
                                        M27.9,10.94A13,13,0,0,0,5.17,8.74a11.58,11.58,0,0,0-1,1.75H8.27a9.45,9.45,0,0,1,15.5.23,9.32,9.32,0,0,1,1.29,2.85h3.63A13.09,13.09,0,0,0,27.9,10.94Z
                                        M16,10.34A5.66,5.66,0,1,0,21.66,16,5.67,5.67,0,0,0,16,10.34Zm-1,8.49-2.5-2.11h0l.85-1L14.9,17l3.64-3.85,1,.9Z
                                        M0.5 18.58 5.18 11.81 9.87 18.58 0.5 18.58
                                        M31.5 13.52 26.82 20.29 22.13 13.52 31.5 13.52" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="ProcessingButtonStyle"
           BasedOn="{StaticResource CommonIconButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="ImageBorder" 
                        CornerRadius="{StaticResource CornerRadius}" 
                            Background="{TemplateBinding Background}"
                            Padding="8">
                        <Canvas x:Name="CanvasBorder" 
                            Background="Transparent">

                            <Path Stretch="None"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M23.61,21.51a9.75,9.75,0,0,1-2.39,2.32,9.45,9.45,0,0,1-14.41-5.4H3.18A13.77,13.77,0,0,0,4,21.06a13,13,0,0,0,12,7.93A13,13,0,0,0,26.7,23.26a12.57,12.57,0,0,0,1-1.75Z
                                  M27.9,10.94A13,13,0,0,0,5.17,8.74a11.58,11.58,0,0,0-1,1.75H8.27a9.45,9.45,0,0,1,15.5.23,9.32,9.32,0,0,1,1.29,2.85h3.63A13.09,13.09,0,0,0,27.9,10.94Z
                                  M19.66,11h.94V9.82H11.4V11h.94a7.73,7.73,0,0,0,1.1,3.59,7.86,7.86,0,0,0,1,1.39,8.48,8.48,0,0,0-1,1.44A7.83,7.83,0,0,0,12.33,21H11.4v1.15h9.2V21h-.93a7.92,7.92,0,0,0-1.11-3.67,8.7,8.7,0,0,0-1-1.39,8.48,8.48,0,0,0,1-1.44A7.8,7.8,0,0,0,19.66,11ZM17.17,15.3a.78.78,0,0,1-.58.27.37.37,0,0,0-.35.38v0a.37.37,0,0,0,.35.38.71.71,0,0,1,.55.26A8,8,0,0,1,18,17.77a7.72,7.72,0,0,1,.45.91H13.56A8,8,0,0,1,14,17.8a7.7,7.7,0,0,1,.83-1.18.78.78,0,0,1,.58-.27.37.37,0,0,0,.35-.38v0a.37.37,0,0,0-.35-.38.71.71,0,0,1-.55-.26A7.5,7.5,0,0,1,14,14.15,7.23,7.23,0,0,1,13,11H19a7.1,7.1,0,0,1-1,3.15A7.7,7.7,0,0,1,17.17,15.3Z
                                  M0.5 18.58 5.18 11.81 9.87 18.58 0.5 18.58
                                  M31.5 13.52 26.82 20.29 22.13 13.52 31.5 13.52"/>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
   
    <Style TargetType="{x:Type Button}"
               x:Key="ColorPickerButtonStyle">
        <Setter Property="HorizontalAlignment"
                    Value="Center"/>
        <Setter Property="VerticalAlignment"
                    Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OuterBorder"
                            Padding="4,2"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{StaticResource Control.BorderBrush.Focused}">
                        <Path Fill="{StaticResource Control.BackGround}"
                              Stretch="Uniform">
                            <Path.Data>
                                <CombinedGeometry>
                                    <CombinedGeometry.Geometry1>
                                        <PathGeometry Figures="M16.31,9.82c-2.07,1.87-6.76,6.11-6.76,6.11s-3.52,6.23-2.83,7.02c0.69,0.79,7.5-2.09,7.5-2.09s3.56-3.2,5.34-4.8c0.42-0.38,0.85-0.76,1.28-1.15L16.31,9.82z M13.09,19.57c0,0-4.22,2.15-4.56,1.68C8.19,20.78,10.86,17,10.86,17l5.45-4.74l2.23,2.57L13.09,19.57z M28.78,5.15c-0.46-1.29-1.43-2.02-2.8-2.21c-0.23-0.03-0.47-0.02-0.71-0.04c-0.21,0.04-0.41,0.08-0.62,0.11c-0.02,0.02-0.04,0.04-0.07,0.05c-0.5,0.14-0.93,0.41-1.31,0.75C23.06,4,22.85,4.19,22.64,4.38c-0.19,0.17-0.39,0.35-0.58,0.52c-0.47,0.42-0.94,0.84-1.42,1.27c-0.12-0.13-0.22-0.25-0.33-0.36c-0.62-0.63-1.59-0.83-2.38-0.49c-1.39,0.61-1.77,2.31-0.77,3.46c0.15,0.17,0.3,0.34,0.46,0.51l4.05,4.56c0,0,0,0,0.01,0c0.19,0.21,0.36,0.4,0.53,0.59c0.82,0.9,2.17,0.97,3.06,0.16c0.89-0.8,0.96-2.15,0.15-3.06c-0.08-0.09-0.16-0.19-0.25-0.28c0.67-0.6,1.33-1.18,1.98-1.77c0.25-0.23,0.5-0.45,0.75-0.68C28.97,7.79,29.27,6.53,28.78,5.15z M6.52,23.78c0,0-1.98,1.73-1.98,3.1c0,1.37,0.89,2.23,1.98,2.23s1.98-0.86,1.98-2.23C8.5,25.5,6.52,23.78,6.52,23.78z M6.62,25.15c0,0-0.88,0.98-0.88,1.58c0,0.61,0.39,0.99,0.88,0.99s0.88-0.38,0.88-0.99C7.5,26.13,6.62,25.15,6.62,25.15z"/>
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <PathGeometry>
                                            <PathFigure StartPoint="14.2,20.37" IsClosed="True">
                                                <PolyLineSegment Points="7.49,22.15 9.64,16.97 16.65,17.46"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                     Value="False">
                            <Setter Property="Background"
                                    TargetName="OuterBorder"
                                    Value="{StaticResource Control.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Style for custom color picker-->
    
    <Style TargetType="{x:Type local:CustomColorPicker}">
        <Setter Property="MaxLength"
                    Value="15"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                    Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomColorPicker}">
                    <Grid x:Name="mainGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="headerGrid"
                                    Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <local:CustomTextBlock x:Name="tbMandatory"
                                                                Text="* "
                                                                Grid.Column="0"
                                                                Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbHeader"
                                                                TextTrimming="CharacterEllipsis"
                                                                Grid.Column="1"
                                                                Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <Border Grid.Row="1"
                                    CornerRadius="8"
                                    Margin="0,8,0,0"
                                    x:Name="ContentBorder"
                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{TemplateBinding Background}">
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="FillBorder"
                                            Grid.Column="0"
                                            Margin="16,0,0,0"
                                            Width="{Binding ActualWidth,ElementName=btnColorPicker}"
                                            Height="{Binding ActualHeight,ElementName=btnColorPicker}"
                                            Background="{Binding SolidColorBrush,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                  Grid.Column="1"
                                                  Focusable="false"
                                                  Foreground="{StaticResource Control.DefaultTextForeground}"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" />
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                                    Grid.Column="1"
                                                       VerticalAlignment="Center"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       
                                                       Visibility="Collapsed" />
                                <Button x:Name="btnColorPicker"
                                            Grid.Column="2"
                                            Margin="0,0,16,0"
                                            Style="{StaticResource ColorPickerButtonStyle}"/>
                            </Grid>
                        </Border>
                        <local:CustomTextBlock Grid.Row="2"
                                                           x:Name="tbErrorMessage"
                                                           TextTrimming="CharacterEllipsis"
                                                           Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Visibility="{Binding ErrorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Padding="2,5,0,0"
                                                           Margin="0,0,0,5"
                                                           Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowOpacity"
                                     Value="False">
                            <Setter Property="MaxLength"
                                        Value="11"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                               Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="ErrorState"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Error}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ErrorState"
                                           Value="False">
                                </Condition>
                                <Condition Property="IsFocused"
                                           Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="Focusable"
                                        Value="False"/>
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Background"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="Margin"
                                    TargetName="ContentBorder"
                                    Value="0" />
                            <Setter Property="BorderThickness"
                                    TargetName="ContentBorder"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="headerGrid"
                                    Value="Collapsed" />
                            <Setter Property="Height"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="XSmall" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="XSmall" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="XSmall" />
                            <Setter Property="Width"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Large" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Large" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Large" />
                            <Setter Property="Width"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Medium" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Medium" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Medium" />
                            <Setter Property="Width"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnColorPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbMandatory"
                                    Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Visibility ,ElementName=tbDefaultValue}"
                                           Value="Collapsed" />
                                <Condition Binding="{Binding ErrorState, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Visibility ,ElementName=tbDefaultValue}"
                                         Value="Collapsed">
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion-->

    <!--#region Style for custom font picker-->
    
    <Style TargetType="{x:Type local:CustomFontPicker}">
        <Setter Property="KeyboardNavigation.TabNavigation"
                    Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomFontPicker}">
                    <Grid x:Name="mainGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="headerGrid"
                                    Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <local:CustomTextBlock x:Name="tbMandatory"
                                                                Text="* "
                                                                Grid.Column="0"
                                                                Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbHeader"
                                                                TextTrimming="CharacterEllipsis"
                                                                Grid.Column="1"
                                                                Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <Border Grid.Row="1"
                                    CornerRadius="8"
                                    Margin="0,8,0,0"
                                    x:Name="ContentBorder"
                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{TemplateBinding Background}">
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                  Grid.Column="0"
                                                  Focusable="false"
                                                  Foreground="{StaticResource Control.DefaultTextForeground}"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" />
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                                    Grid.Column="0"
                                                       VerticalAlignment="Center"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       
                                                       Visibility="Collapsed" />
                                <Button x:Name="btnFontPicker"
                                            Grid.Column="1"
                                            Margin="0,0,16,0"
                                            Style="{StaticResource FontPickerButtonStyle}"/>
                            </Grid>
                        </Border>
                        <local:CustomTextBlock Grid.Row="2"
                                                           x:Name="tbErrorMessage"
                                                           TextTrimming="CharacterEllipsis"
                                                           Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Visibility="{Binding ErrorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Padding="2,5,0,0"
                                                           Margin="0,0,0,5"
                                                           Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                               Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="ErrorState"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Error}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ErrorState"
                                           Value="False">
                                </Condition>
                                <Condition Property="IsFocused"
                                           Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="Focusable"
                                        Value="False"/>
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Background"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="Margin"
                                    TargetName="ContentBorder"
                                    Value="0" />
                            <Setter Property="BorderThickness"
                                    TargetName="ContentBorder"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="headerGrid"
                                    Value="Collapsed" />
                            <Setter Property="Height"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="XSmall" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="XSmall" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="XSmall" />
                            <Setter Property="Width"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Large" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Large" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Large" />
                            <Setter Property="Width"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Medium" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Medium" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Medium" />
                            <Setter Property="Width"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnFontPicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbMandatory"
                                    Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Visibility ,ElementName=tbDefaultValue}"
                                           Value="Collapsed" />
                                <Condition Binding="{Binding ErrorState, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Visibility ,ElementName=tbDefaultValue}"
                                         Value="Collapsed">
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion-->
    
    <!--#region Style for custom discount textblock-->
    <Style TargetType="{x:Type local:CustomDiscountTextBlock}">
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontStretch"
                Value="{StaticResource FontStretch}" />
        <Setter Property="Foreground"
                Value="{StaticResource Control.Heading.ForeGround}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomDiscountTextBlock}">
                    <StackPanel>
                        <local:CustomTextBlock x:Name="tbDiscount"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding DiscountContent, RelativeSource={RelativeSource TemplatedParent}}" />
                        <local:CustomTextBlock x:Name="tbContent"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text"
                                 SourceName="tbDiscount"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbDiscount"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Visibility"
                                 SourceName="tbDiscount"
                                 Value="Visible">
                            <Setter Property="TextDecorations"
                                    TargetName="tbContent"
                                    Value="Strikethrough" />
                            <Setter Property="Foreground"
                                    TargetName="tbContent"
                                    Value="{StaticResource CustomDiscountTextBlock.Disabled.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    TargetName="tbDiscount"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                            <Setter Property="Foreground"
                                    TargetName="tbContent"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for custom scrollbar-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource ScrollBar.Dark.Static.Border}"
                            BorderThickness="0"
                            CornerRadius="8,8,0,0"
                            Background="{StaticResource ScrollBar.Dark.Static.Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Border}" />
                        </MultiDataTrigger>



                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Border}" />
                        </MultiDataTrigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButtonDown"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource ScrollBar.Dark.Static.Border}"
                            BorderThickness="0"
                            CornerRadius="0,0,8,8"
                            Background="{StaticResource ScrollBar.Dark.Static.Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Border}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Border}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButtonleftSide"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource ScrollBar.Dark.Static.Border}"
                            BorderThickness="0"
                            CornerRadius="8,0,0,8"
                            Background="{StaticResource ScrollBar.Dark.Static.Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Border}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Border}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButtonRightSide"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource ScrollBar.Dark.Static.Border}"
                            BorderThickness="0"
                            CornerRadius="0,8,8,0"
                            Background="{StaticResource ScrollBar.Dark.Static.Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Static.Background}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Border}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Border}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="borderthumb"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{StaticResource ScrollBar.Dark.Static.Thumb}"
                            Height="{TemplateBinding Height}"
                            Width="24">
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.Static.Thumb}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.Static.Thumb}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Thumb}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Thumb}" />
                        </MultiDataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDragging,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Thumb}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDragging,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Thumb}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="borderthumb"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{StaticResource ScrollBar.Dark.Static.Thumb}"
                            Width="{TemplateBinding Width}"
                            Height="24">
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.Static.Thumb}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.Static.Thumb}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.Static.Thumb}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.Static.Thumb}" />
                        </MultiDataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDragging,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Thumb}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDragging,RelativeSource={RelativeSource Mode=Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="borderthumb"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Thumb}" />
                        </MultiDataTrigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource ScrollBar.Dark.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ScrollBar.Dark.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1,0" />
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomScrollBar}">
                    <Grid  SnapsToDevicePixels="true">
                        <Border x:Name="borderouter"
                                BorderBrush="{StaticResource ScrollBar.Dark.Border}"
                                BorderThickness="{StaticResource Scrollbar.BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}"
                                Background="{StaticResource ScrollBar.Dark.MouseOver.Background}" />
                        <Grid Margin="{StaticResource Margin.CornerRadius}"
                              x:Name="Bg"
                              SnapsToDevicePixels="true">


                            <Grid.RowDefinitions>
                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="{x:Type RowDefinition}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="XSmall">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Small}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Small">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Medium}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Medium">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Large}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Large">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Large}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="{x:Type RowDefinition}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="XSmall">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Small}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Small">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Medium}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Medium">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Large}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                             Value="Large">
                                                    <Setter Property="Height"
                                                            Value="{DynamicResource CustomScroll.Large}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                            </Grid.RowDefinitions>

                            <Border Grid.Row="1" />
                            <RepeatButton x:Name="PART_LineUpButton"
                                          Command="{x:Static ScrollBar.LineUpCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop"
                                      Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                      Stretch="Uniform" />
                            </RepeatButton>
                            <Border x:Name="bordertrack"
                                    Grid.Row="1"
                                    BorderThickness="{StaticResource Scrollbar.BorderThickness.UpDown}"
                                    Padding="0,8,0,8"
                                    BorderBrush="{StaticResource ScrollBar.Dark.Border}">
                                <Track x:Name="PART_Track"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                            </Border>
                            <RepeatButton x:Name="PART_LineDownButton"
                                          Command="{x:Static ScrollBar.LineDownCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Style="{StaticResource ScrollBarButtonDown}"
                                          Grid.Row="2">
                                <Path x:Name="ArrowBottom"
                                      Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                      Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                     Value="XSmall">
                            <Setter Property="Width"
                                    Value="{DynamicResource CustomScroll.Small.Width}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource MultiScreen.Scrollbar.Margin.Arrow}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource MultiScreen.Scrollbar.Margin.Arrow}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                     Value="Small">
                            <Setter Property="Width"
                                    Value="{DynamicResource CustomScroll.Medium.Width}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                     Value="Medium">
                            <Setter Property="Width"
                                    Value="{DynamicResource CustomScroll.Large.Width}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                     Value="Large">
                            <Setter Property="Width"
                                    Value="{DynamicResource CustomScroll.Large.Width}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                            <Setter Property="Margin"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource Scrollbar.Margin.Arrow}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter TargetName="borderouter"
                                    Property="Background"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Background}" />
                            <Setter TargetName="borderouter"
                                    Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter TargetName="bordertrack"
                                    Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ScrollBar.Light.Static.Background}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter TargetName="borderouter"
                                    Property="Background"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Background}" />
                            <Setter TargetName="borderouter"
                                    Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter TargetName="bordertrack"
                                    Property="BorderBrush"
                                    Value="{StaticResource ScrollBar.Light.Static.Border}" />
                            <Setter TargetName="ArrowTop"
                                    Property="Fill"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                            <Setter TargetName="ArrowBottom"
                                    Property="Fill"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />

                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />

                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.Pressed.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.Pressed.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="false" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="false" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="false" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.MouseOver.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="false" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.MouseOver.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Bottom" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="False" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="True" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Bottom" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="False" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="True" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Middle" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="True" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="True" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Middle" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="True" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="True" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Top" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="True" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="False" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="Top" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineDownButton"
                                    Value="True" />
                            <Setter Property="IsEnabled"
                                    TargetName="PART_LineUpButton"
                                    Value="False" />
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.Static.Glyph}" />


                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding VerticalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Visible" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                                <Condition Binding="{Binding VerticalOffset,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding VerticalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Visible" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                                <Condition Binding="{Binding VerticalOffset,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowTop"
                                    Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding VerticalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Visible" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Light" />
                                <Condition Binding="{Binding IsMaxVeriticalWidthReached,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding VerticalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Visible" />
                                <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="Dark" />
                                <Condition Binding="{Binding IsMaxVeriticalWidthReached,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ArrowBottom"
                                    Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CustomScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="borderouter"
                                        BorderBrush="{StaticResource ScrollBar.Dark.Border}"
                                        BorderThickness="{StaticResource Scrollbar.BorderThickness}"
                                        CornerRadius="{StaticResource CornerRadius}"
                                        Background="{StaticResource ScrollBar.Dark.MouseOver.Background}" />
                                <Grid Margin="{StaticResource Margin.CornerRadius}"
                                      SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="TopColumnDefintion">
                                            <ColumnDefinition.Style>
                                                <Style TargetType="{x:Type ColumnDefinition}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="XSmall">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Small}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Small">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Medium}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Medium">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Large}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Large">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Large}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ColumnDefinition.Style>
                                        </ColumnDefinition>
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition x:Name="BottomColumnDefinition">
                                            <ColumnDefinition.Style>
                                                <Style TargetType="{x:Type ColumnDefinition}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="XSmall">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Small}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Small">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Large}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Medium">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Large}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                                     Value="Large">
                                                            <Setter Property="Width"
                                                                    Value="{DynamicResource CustomScroll.Large}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ColumnDefinition.Style>
                                        </ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.Column="1" />
                                    <RepeatButton x:Name="PART_LineLeftButton"
                                                  Command="{x:Static ScrollBar.LineLeftCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButtonleftSide}">
                                        <Path x:Name="ArrowLeft"
                                              Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                              Fill="{StaticResource ScrollBar.Dark.Static.Glyph}"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                    <Border x:Name="bordertrack"
                                            Grid.Column="1"
                                            BorderThickness="{StaticResource Scrollbar.BorderThickness.LeftRight}"
                                            Margin="0,-8,0,-8"
                                            BorderBrush="{StaticResource ScrollBar.Dark.Border}">
                                        <Track x:Name="PART_Track"
                                               IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Border>
                                    <RepeatButton x:Name="PART_LineRightButton"
                                                  Grid.Column="2"
                                                  Command="{x:Static ScrollBar.LineRightCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButtonRightSide}">
                                        <Path x:Name="ArrowRight"
                                              Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                              Fill="{StaticResource ScrollBar.Dark.Static.Glyph}"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                             Value="XSmall">
                                    <Setter Property="Height"
                                            Value="{DynamicResource CustomScroll.Small.Width}" />
                                    <Setter Property="Padding"
                                            TargetName="bordertrack"
                                            Value="8,0" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource MultiScreen.Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource MultiScreen.Scrollbar.Margin.Arrow}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                             Value="Small">
                                    <Setter Property="Height"
                                            Value="{DynamicResource CustomScroll.Medium.Width}" />
                                    <Setter Property="Padding"
                                            TargetName="bordertrack"
                                            Value="{DynamicResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                             Value="Medium">
                                    <Setter Property="Height"
                                            Value="{DynamicResource CustomScroll.Large.Width}" />
                                    <Setter Property="Padding"
                                            TargetName="bordertrack"
                                            Value="{DynamicResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Size,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                             Value="Large">
                                    <Setter Property="Height"
                                            Value="{DynamicResource CustomScroll.Large.Width}" />
                                    <Setter Property="Padding"
                                            TargetName="bordertrack"
                                            Value="{DynamicResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                    <Setter Property="Margin"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource Scrollbar.Margin.Arrow}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            Value="{StaticResource ScrollBar.Dark.Static.Background}" />
                                    <Setter Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                                    <Setter TargetName="borderouter"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Dark.MouseOver.Background}" />
                                    <Setter TargetName="borderouter"
                                            Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                                    <Setter TargetName="bordertrack"
                                            Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Dark.Static.Border}" />
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            Value="{StaticResource ScrollBar.Light.Static.Background}" />
                                    <Setter Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Light.Static.Border}" />
                                    <Setter TargetName="borderouter"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Light.MouseOver.Background}" />
                                    <Setter TargetName="borderouter"
                                            Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Light.Static.Border}" />
                                    <Setter TargetName="bordertrack"
                                            Property="BorderBrush"
                                            Value="{StaticResource ScrollBar.Light.Static.Border}" />
                                    <Setter TargetName="ArrowLeft"
                                            Property="Fill"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                    <Setter TargetName="ArrowRight"
                                            Property="Fill"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Dark.Pressed.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Pressed.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.Pressed.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.Pressed.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Dark.MouseOver.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.MouseOver.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.MouseOver.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                                   Value="false" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.MouseOver.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Right" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="False" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="True" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Right" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="False" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="True" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Middle" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="True" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="True" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Middle" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="True" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="True" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Left" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="True" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="False" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Dark.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Position,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="Left" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineRightButton"
                                            Value="True" />
                                    <Setter Property="IsEnabled"
                                            TargetName="PART_LineLeftButton"
                                            Value="True" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Static.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HorizontalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Visible" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Light" />
                                        <Condition Binding="{Binding HorizontalOffset,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HorizontalScrollBarVisibility,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Visible" />
                                        <Condition Binding="{Binding ScrollBarStyle,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="Dark" />
                                        <Condition Binding="{Binding HorizontalOffset,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomScrollViewer}}"
                                                   Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill"
                                            TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Dark.Disabled.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Light.Disabled.Glyph}" />
                                </MultiDataTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--#endregion-->

    <!--#region Style for custom scrollviewer-->

    <Style TargetType="{x:Type local:CustomScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomScrollViewer}">
                    <Grid x:Name="Grid"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" />
                        <local:CustomScrollBar x:Name="PART_VerticalScrollBar"
                                               AutomationProperties.AutomationId="VerticalScrollBar"
                                               Cursor="Arrow"
                                               Grid.Column="1"
                                               Maximum="{TemplateBinding ScrollableHeight}"
                                               Minimum="0"
                                               Grid.Row="0"
                                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                               Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               ViewportSize="{TemplateBinding ViewportHeight}" />
                        <local:CustomScrollBar x:Name="PART_HorizontalScrollBar"
                                               AutomationProperties.AutomationId="HorizontalScrollBar"
                                               Cursor="Arrow"
                                               Grid.Column="0"
                                               Maximum="{TemplateBinding ScrollableWidth}"
                                               Minimum="0"
                                               Grid.ColumnSpan="2"
                                               Orientation="Horizontal"
                                               Grid.Row="1"
                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                               Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom radio button -->
    <Style TargetType="{x:Type local:CustomRadioButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush.Focused}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomRadioButton}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Path x:Name="radioPath"
                              Data="M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm0 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4z"
                              Stretch="Uniform"
                              Fill="{StaticResource Control.BorderBrush.Focused}" />
                        <local:CustomTextBlock x:Name="tbContent"
                                               Margin="8,0,0,0"
                                               Text="{TemplateBinding Content}"
                                               TextSize="Small"
                                               VerticalAlignment="Center"
                                               Grid.Column="1"
                                               Focusable="False"
                                               FontWeight="{StaticResource FontWeight.Bold}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="Width"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbContent"
                                    Value="XSmall" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="Width"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Small}" />
                            <Setter Property="Height"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbContent"
                                    Value="Small" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="Width"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Medium}" />
                            <Setter Property="Height"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbContent"
                                    Value="Medium" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="Width"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Large}" />
                            <Setter Property="Height"
                                    TargetName="radioPath"
                                    Value="{StaticResource CustomRadioButton.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbContent"
                                    Value="Large" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="radioPath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Data"
                                    TargetName="radioPath"
                                    Value="M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0zm0 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12S22.627 4 16 4zm0 7c2.761 0 5 2.239 5 5s-2.239 5-5 5-5-2.239-5-5 2.239-5 5-5z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for custom checkbox-->

    <Style TargetType="{x:Type local:CustomCheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource Control.Heading.ForeGround}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Regular}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomCheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"
                                           x:Name="CustomCheckBox_Grid_Row_Heading" />
                            <RowDefinition Height="2*"
                                           x:Name="CustomCheckBox_Grid_Row_Content" />
                            <RowDefinition Height="*"
                                           x:Name="CustomCheckBox_Grid_Row_Error" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="CustomCheckBox_Grid_Row_Heading_Grid"
                              Grid.Row="0"
                              Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <local:CustomTextBlock x:Name="tbCustomCheckBoxMandatory"
                                                   Text="* "
                                                   Grid.Column="0"
                                                   Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbCustomCheckBoxHeader"
                                                   TextTrimming="CharacterEllipsis"
                                                   Grid.Column="1"
                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>

                        <Grid Margin="0,8,0,0"
                              Grid.Row="1"
                              x:Name="mainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder"
                                    Margin="{TemplateBinding Padding}"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Background="{StaticResource Control.BackGround}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark"
                                          Data="M7.607 21L24 4.9 22.066 3 7.607 17.233 1.902 11.63 0 13.53z"
                                          Margin="4"
                                          Opacity="0"
                                          Stretch="Fill" />
                                    <Rectangle x:Name="indeterminateMark"
                                               Margin="2"
                                               Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              Grid.Column="1"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <!--Margin="24,0,0,0"-->
                        </Grid>

                        <local:CustomTextBlock Grid.Row="2"
                                               x:Name="tbErrorMessage"
                                               TextTrimming="CharacterEllipsis"
                                               Padding="2,5,0,0"
                                               Margin="0,0,0,5"
                                               Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                            <Setter Property="Padding"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomCheckBoxHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Visible" />

                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="Margin"
                                    TargetName="mainGrid"
                                    Value="0" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxHeader"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="MaxWidth"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="MaxHeight"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                            <Setter Property="Padding"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxHeader"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="MaxWidth"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="MaxHeight"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                            <Setter Property="Padding"
                                    Value="8,0,0,0" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxHeader"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Height"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="MaxWidth"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="MaxHeight"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Small}" />

                            <Setter Property="Padding"
                                    Value="{StaticResource CheckBox.Padding.Small}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Large" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Large" />
                            <Setter Property="Width"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Height"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CheckBox.Padding.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxMandatory"
                                    Value="Medium" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomCheckBoxHeader"
                                    Value="Medium" />
                            <Setter Property="Width"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Height"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CheckBox.Padding.Medium}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for custom search textbox -->

    <Style TargetType="{x:Type local:CustomSearchTextBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomSearchTextBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <local:CustomTextBlock x:Name="tbCustomSearchTextBoxHeader"
                                               Grid.Row="0"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}"
                                               FontWeight="{StaticResource FontWeight.Bold}" />
                        <Border x:Name="CustomSearchTextBox_Grid_Row_Content_Border"
                                CornerRadius="{StaticResource CornerRadius}"
                                Grid.Row="1"
                                Margin="0,8,0,0"
                                BorderBrush="{StaticResource Control.BorderBrush}"
                                BorderThickness="{StaticResource Control.Border.Thickness}"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="CustomSearchTextBox_Grid_Content_Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"
                                                      x:Name="CustomSearchTextBox_Grid_Content_Grid_ColText" />
                                    <ColumnDefinition Width="Auto"
                                                      x:Name="CustomSearchTextBox_Grid_Content_Grid_ColErrorImage" />
                                </Grid.ColumnDefinitions>
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       FontSize="{Binding FontSize,RelativeSource={RelativeSource TemplatedParent}}"
                                                       Grid.Column="0"
                                                       VerticalAlignment="Center"
                                                       Visibility="Collapsed" />
                                <ScrollViewer Grid.Column="0"
                                              x:Name="PART_ContentHost"
                                              Focusable="false"
                                              Foreground="{StaticResource Control.DefaultTextForeground}"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                                <Button x:Name="btnCustomSearchTextBoxClear"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Visibility="Collapsed"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Grid.Column="1">
                                    <Path Stretch="Uniform"
                                          Fill="{StaticResource Control.BorderBrush.Focused}"
                                          Data="M12 0c2.17 0 4.181.54 6.022 1.617 1.843 1.061 3.302 2.517 4.372 4.36C23.464 7.82 24 9.83 24 12c0 2.169-.536 4.18-1.606 6.023-1.07 1.842-2.529 3.302-4.37 4.37C16.18 23.464 14.168 24 12 24s-4.18-.536-6.023-1.606c-1.842-1.07-3.302-2.529-4.37-4.37C.536 16.18 0 14.168 0 12s.536-4.18 1.606-6.023c1.07-1.842 2.529-3.302 4.37-4.37C7.82.536 9.832 0 12 0zm0 2.75c-1.262 0-2.457.245-3.597.737-1.106.462-2.086 1.12-2.94 1.975C4.605 6.32 3.94 7.3 3.463 8.404 2.988 9.54 2.75 10.736 2.75 12c0 1.262.245 2.457.737 3.597.462 1.106 1.12 2.086 1.975 2.94.857.857 1.838 1.523 2.942 1.999 1.135.476 2.332.714 3.596.714 1.262 0 2.457-.245 3.597-.737 1.106-.462 2.086-1.12 2.94-1.975.857-.857 1.523-1.838 1.999-2.942.476-1.135.714-2.332.714-3.596 0-1.262-.245-2.457-.737-3.597-.462-1.106-1.12-2.086-1.975-2.94-.857-.857-1.838-1.523-2.942-1.999C14.46 2.988 13.264 2.75 12 2.75zm4.018 3.857c.374 0 .71.138.973.402.264.264.402.599.402.973 0 .33-.11.626-.306.853l-.106.108L13.943 12l3.037 3.056c.192.192.32.417.378.665l.026.152.009.156c0 .368-.14.7-.402.962-.264.264-.599.402-.973.402-.313 0-.6-.094-.86-.287l-.126-.105L12 13.949 8.947 17.02c-.185.168-.398.28-.632.334l-.179.03-.154.008c-.374 0-.71-.138-.973-.402-.264-.264-.402-.599-.402-.973 0-.33.11-.626.306-.853l.106-.108L10.056 12 7.04 8.963c-.203-.184-.337-.41-.397-.664l-.027-.155-.009-.162c0-.374.138-.71.402-.973.264-.264.599-.402.973-.402.313 0 .6.094.86.287l.126.105L12 10.05l3.053-3.071c.185-.168.398-.28.632-.334l.179-.03.154-.008z" />
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomSearchTextBoxHeader"
                                    Value="Collapsed" />
                            <Setter Property="Margin"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="NonEmpty"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="Margin"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource SearchBox.Content.Padding}" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource SearchBox.Padding}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="Margin"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource SearchBox.Content.Padding}" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource SearchBox.Padding}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="Margin"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource SearchBox.Content.Padding}" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource SearchBox.Padding}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.Small}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="Margin"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource SearchBox.Content.Padding.DataGridSize}" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="Width"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="btnCustomSearchTextBoxClear"
                                    Value="{StaticResource CheckBox.XSmall}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}" />
                                <Condition Property="IsFocused"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility"
                                        TargetName="tbDefaultValue"
                                        Value="Visible" />
                                <Setter Property="Foreground"
                                        Value="{StaticResource Control.BorderBrush}" />
                                <Setter Property="BorderBrush"
                                        TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                        Value="{StaticResource Control.BorderBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NonEmpty"
                                           Value="True" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomSearchTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiTrigger>
                        <Trigger Property="NonEmpty"
                                 Value="True">
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom textbox -->

    <Style TargetType="{x:Type local:CustomTextBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomTextBox}">
                    <Grid x:Name="CustomTextBox_Grid_Main">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"
                                           x:Name="CustomTextBox_Grid_Row_Heading" />
                            <RowDefinition Height="2*"
                                           x:Name="CustomTextBox_Grid_Row_Content" />
                            <RowDefinition Height="Auto"
                                           x:Name="CustomTextBox_Grid_Row_Error" />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="CustomTextBox_Grid_Row_Heading_StackPanel"
                                    Orientation="Horizontal"
                                    Grid.Row="0">
                            <local:CustomTextBlock x:Name="tbCustomTextBoxMandatory"
                                                   Text="* "
                                                   Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbCustomTextBoxHeader"
                                                   TextTrimming="CharacterEllipsis"
                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>
                        <Border Grid.Row="1"
                                CornerRadius="8"
                                Margin="0,8,0,0"
                                x:Name="CustomTextBox_Grid_Row_Content_Border"
                                BorderBrush="{StaticResource Control.BorderBrush}"
                                BorderThickness="{StaticResource Control.Border.Thickness}"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="CustomTextBox_Grid_Content_Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*"
                                                      x:Name="CustomTextBox_Grid_Content_Grid_ColText" />
                                    <ColumnDefinition Width="Auto"
                                                      x:Name="CustomTextBox_Grid_Content_Grid_ColErrorImage" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer Grid.Column="0"
                                              x:Name="PART_ContentHost"
                                              Focusable="false"
                                              Foreground="{StaticResource Control.DefaultTextForeground}"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                       VerticalAlignment="Center"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       Grid.Column="0"
                                                       Visibility="Collapsed" />
                                <Grid  x:Name="imgCustomTextBoxError"
                                       Grid.Column="1"
                                       Visibility="Collapsed">
                                    <Path Data="M258.167 90c.32 0 .57-.167.748-.5.142-.292.106-.667-.107-1.125l-11.06-21.813c-.178-.374-.427-.562-.748-.562-.32 0-.57.188-.748.563l-11.06 21.812c-.213.458-.249.833-.107 1.125.179.333.428.5.748.5h22.334zm-9.457-8h-3.42v-9h3.42v9zm0 5h-3.42v-3h3.42v3z"
                                          Fill="{StaticResource Control.BorderBrush.Error}"
                                          Stretch="Fill">
                                    </Path>
                                </Grid>
                            </Grid>
                        </Border>
                        <local:CustomTextBlock Grid.Row="2"
                                               x:Name="tbErrorMessage"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                               Visibility="{Binding ErrorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                               Padding="2,5,0,0"
                                               Margin="0,0,0,5"
                                               Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="Collapsed" />
                            <!--<Setter Property="Margin"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="0" />-->
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="BorderThickness"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                    Value="Collapsed" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="Height"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="Width"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Height"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Margin"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="2,0,0,0" />
                            <Setter Property="Padding"
                                    TargetName="tbErrorMessage"
                                    Value="0,4,0,0" />
                            <Setter Property="TextSize"
                                    TargetName="tbErrorMessage"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="Small" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMasked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="FontFamily"
                                        Value="Resources/#password" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ErrorState"
                                           Value="False">
                                </Condition>
                                <Condition Property="IsFocused"
                                           Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="imgCustomTextBoxError"
                                    Value="Collapsed" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />

                        </MultiTrigger>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Regular}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="XSmall" />
                            <Setter Property="Width"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Margin"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="2,0,0,0" />
                            <Setter Property="Padding"
                                    TargetName="tbErrorMessage"
                                    Value="0,4,0,0" />
                            <Setter Property="TextSize"
                                    TargetName="tbErrorMessage"
                                    Value="XSmall" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="XSmall" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="XSmall" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Large" />
                            <Setter Property="Width"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Height"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="Large" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="Large" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Medium" />
                            <Setter Property="Width"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="Medium" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="Medium" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbDefaultValue"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Height"
                                    TargetName="imgCustomTextBoxError"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="Small" />
                        </Trigger>
                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomTextBoxMandatory"
                                    Value="Visible" />

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Visible" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NonEmpty"
                                           Value="True" />
                                <Condition Property="ErrorState"
                                           Value="False" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiTrigger>
                        <Trigger Property="ErrorState"
                                 Value="True">
                            <Setter Property="Width"
                                    TargetName="CustomTextBox_Grid_Content_Grid_ColErrorImage"
                                    Value="*" />
                            <Setter Property="Visibility"
                                    TargetName="imgCustomTextBoxError"
                                    Value="Visible" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBox_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Error}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ValidationType"
                               Value="Login" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CustomTextBox}">
                            <Grid x:Name="CustomTextBox_Grid_Main">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"
                                                   x:Name="CustomTextBox_Grid_Row_Content" />
                                    <RowDefinition Height="Auto"
                                                   x:Name="CustomTextBox_Grid_Row_Error" />
                                </Grid.RowDefinitions>
                                <Border  Grid.Row="0"
                                         x:Name="CustomTextBox_Grid_Row_Content_Border"
                                         CornerRadius="8"
                                         Margin="0,8,0,0"
                                         BorderBrush="{StaticResource Control.BorderBrush}"
                                         BorderThickness="{StaticResource Control.Border.Thickness}"
                                         Background="{TemplateBinding Background}">
                                    <StackPanel x:Name="CustomTextBox_Grid_Row_Content_StackPanel"
                                                Orientation="Vertical">

                                        <StackPanel x:Name="CustomTextBox_Grid_Row_Heading_StackPanel"
                                                    Orientation="Horizontal"
                                                    Visibility="Collapsed">
                                            <local:CustomTextBlock x:Name="tbCustomTextBoxMandatory"
                                                                   Text="* "
                                                                   Visibility="Collapsed" />
                                            <local:CustomTextBlock x:Name="tbCustomTextBoxHeader"
                                                                   TextTrimming="CharacterEllipsis"
                                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Visibility="Visible" />
                                        </StackPanel>

                                        <Grid x:Name="CustomTextBox_Grid_Content_Grid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="6*"
                                                                  x:Name="CustomTextBox_Grid_Content_Grid_ColText" />
                                                <ColumnDefinition Width="1*"
                                                                  x:Name="CustomTextBox_Grid_Content_Grid_ColErrorImage" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollViewer Grid.Column="0"
                                                          x:Name="PART_ContentHost"
                                                          Focusable="false"
                                                          Foreground="{StaticResource Control.DefaultTextForeground}"
                                                          HorizontalScrollBarVisibility="Hidden"
                                                          VerticalScrollBarVisibility="Hidden" />
                                            <local:CustomTextBlock x:Name="tbDefaultValue"
                                                                   Foreground="{StaticResource Control.BorderBrush}"
                                                                   Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                                   Grid.Column="0"
                                                                   Visibility="Collapsed" />
                                            <Grid  x:Name="imgCustomTextBoxError"
                                                   Grid.Column="1"
                                                   Visibility="Collapsed">
                                                <Path Data="M258.167 90c.32 0 .57-.167.748-.5.142-.292.106-.667-.107-1.125l-11.06-21.813c-.178-.374-.427-.562-.748-.562-.32 0-.57.188-.748.563l-11.06 21.812c-.213.458-.249.833-.107 1.125.179.333.428.5.748.5h22.334zm-9.457-8h-3.42v-9h3.42v9zm0 5h-3.42v-3h3.42v3z"
                                                      Fill="{StaticResource Control.BorderBrush.Error}"
                                                      Stretch="Fill">
                                                </Path>
                                            </Grid>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                                <local:CustomTextBlock Grid.Row="1"
                                                       x:Name="tbErrorMessage"
                                                       TextTrimming="CharacterEllipsis"
                                                       Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="{Binding ErrorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Padding="2,5,0,0"
                                                       Margin="0,0,0,5"
                                                       Foreground="{StaticResource Control.BorderBrush.Error}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Heading"
                                         Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ErrorTextVisible"
                                         Value="False">
                                    <Setter Property="Visibility"
                                            TargetName="tbErrorMessage"
                                            Value="Collapsed" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMasked"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="FontFamily"
                                                Value="Resources/#password" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>

                                <Trigger Property="ErrorState"
                                         Value="True">
                                    <Setter Property="Visibility"
                                            TargetName="imgCustomTextBoxError"
                                            Value="Visible" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Error}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ErrorState"
                                                   Value="False">
                                        </Condition>
                                        <Condition Property="IsFocused"
                                                   Value="False">
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility"
                                            TargetName="imgCustomTextBoxError"
                                            Value="Collapsed" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />

                                </MultiTrigger>
                                <Trigger Property="IsReadOnly"
                                         Value="True">
                                    <Setter Property="Background"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="FontWeight"
                                            Value="{StaticResource FontWeight.Bold}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="FontWeight"
                                            Value="{StaticResource FontWeight.Regular}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Size"
                                                   Value="Large" />
                                        <Condition Property="IsFocused"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Large}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Large}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Large" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Large}" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Large}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Large}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxHeader"
                                            Value="Medium" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="Medium" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Size"
                                                   Value="Medium" />
                                        <Condition Property="IsFocused"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Medium}" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Medium}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Medium" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxHeader"
                                            Value="Small" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="Small" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Size"
                                                   Value="Small" />
                                        <Condition Property="IsFocused"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Small}" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Small}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Small" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxHeader"
                                            Value="XSmall" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="XSmall" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                                   Value="True" />
                                        <Condition Property="Size"
                                                   Value="Large" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Large}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Large" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Large}" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Large}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Large}" />

                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Collapsed" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Large}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                                   Value="True" />
                                        <Condition Property="Size"
                                                   Value="Medium" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Medium}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Medium" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Medium}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxHeader"
                                            Value="Small" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="Small" />

                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Collapsed" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Medium}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused"
                                                   Value="True" />
                                        <Condition Property="Size"
                                                   Value="Small" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FontSize"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="Margin"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="{StaticResource Margin.Login.Small}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbDefaultValue"
                                            Value="Small" />
                                    <Setter Property="Width"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="Height"
                                            TargetName="imgCustomTextBoxError"
                                            Value="{StaticResource FontSize.Small}" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxHeader"
                                            Value="XSmall" />
                                    <Setter Property="TextSize"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="XSmall" />

                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Collapsed" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Small}" />
                                </MultiTrigger>
                                <Trigger Property="IsMandatory"
                                         Value="True">
                                    <Setter Property="Visibility"
                                            TargetName="tbCustomTextBoxMandatory"
                                            Value="Visible" />

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text"
                                                   Value="{x:Static sys:String.Empty}">
                                        </Condition>
                                        <Condition Property="IsFocused"
                                                   Value="False">
                                        </Condition>
                                        <Condition Property="Size"
                                                   Value="Large">
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Collapsed" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Large}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text"
                                                   Value="{x:Static sys:String.Empty}">
                                        </Condition>
                                        <Condition Property="IsFocused"
                                                   Value="False">
                                        </Condition>
                                        <Condition Property="Size"
                                                   Value="Medium">
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Collapsed" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Medium}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text"
                                                   Value="{x:Static sys:String.Empty}">
                                        </Condition>
                                        <Condition Property="IsFocused"
                                                   Value="False">
                                        </Condition>
                                        <Condition Property="Size"
                                                   Value="Small">
                                        </Condition>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility"
                                            TargetName="tbDefaultValue"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Collapsed" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Small}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource Control.BorderBrush}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="NonEmpty"
                                                   Value="True" />
                                        <Condition Property="ErrorState"
                                                   Value="False" />
                                        <Condition Property="IsEnabled"
                                                   Value="True" />
                                        <Condition Property="IsReadOnly"
                                                   Value="False" />
                                        <Condition Property="Size"
                                                   Value="Large" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground"
                                            TargetName="PART_ContentHost"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Large}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="NonEmpty"
                                                   Value="True" />
                                        <Condition Property="ErrorState"
                                                   Value="False" />
                                        <Condition Property="IsEnabled"
                                                   Value="True" />
                                        <Condition Property="IsReadOnly"
                                                   Value="False" />
                                        <Condition Property="Size"
                                                   Value="Medium" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground"
                                            TargetName="PART_ContentHost"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Medium}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="NonEmpty"
                                                   Value="True" />
                                        <Condition Property="ErrorState"
                                                   Value="False" />
                                        <Condition Property="IsEnabled"
                                                   Value="True" />
                                        <Condition Property="IsReadOnly"
                                                   Value="False" />
                                        <Condition Property="Size"
                                                   Value="Small" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground"
                                            TargetName="PART_ContentHost"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Visibility"
                                            TargetName="CustomTextBox_Grid_Row_Heading_StackPanel"
                                            Value="Visible" />
                                    <Setter Property="BorderBrush"
                                            TargetName="CustomTextBox_Grid_Row_Content_Border"
                                            Value="{StaticResource Control.BorderBrush.Focused}" />
                                    <Setter Property="Padding"
                                            Value="{StaticResource Padding.Login.Text.Small}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom button textbox -->

    <Style x:Key="CustomButtonTextBoxButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="2"/>
        <Setter Property="Width"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PathBorder"
                            Padding="8"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{StaticResource Action.Active.Background}">
                        <Path x:Name="ButtonPath"
                              Data="M23.76 22.18c4.677-5.505 4.176-13.718-1.134-18.614-5.31-4.895-13.537-4.728-18.644.379-5.107 5.107-5.274 13.334-.379 18.644 4.895 5.31 13.109 5.81 18.613 1.135l7.138 7.17c.424.427 1.114.429 1.54.004l.003-.001c.426-.427.427-1.12.001-1.547l-7.137-7.17zM8.13 23.355v-2.795c.02-2.41 1.968-4.357 4.377-4.377h1.876c2.423 0 4.393 1.954 4.413 4.377v2.832c-3.34 1.776-7.35 1.748-10.666-.073v.036zm5.333-9.416c-1.442 0-2.611-1.169-2.611-2.611 0-1.443 1.169-2.612 2.611-2.612 1.442 0 2.612 1.17 2.612 2.612 0 1.442-1.17 2.611-2.612 2.611zm7.54 7.945v-1.324c-.014-2.62-1.571-4.984-3.972-6.032 1.732-1.93 1.626-4.886-.241-6.686-1.867-1.8-4.824-1.8-6.69 0-1.867 1.8-1.974 4.755-.242 6.686-2.386 1.059-3.927 3.421-3.935 6.032v1.214c-3.435-3.146-4.578-8.082-2.874-12.417 1.703-4.335 5.9-7.173 10.558-7.139 4.657.034 8.812 2.934 10.452 7.293 1.64 4.36.425 9.278-3.056 12.373z"
                              Fill="{StaticResource Action.Active.Foreground}"
                              Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ButtonType,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomButtonTextBox}}"
                                     Value="Resend">
                            <Setter TargetName="ButtonPath"
                                    Property="Data"
                                    Value="M16.333 0c2.396 0 4.631.588 6.707 1.765 2.023 1.125 3.62 2.66 4.79 4.604 1.225 1.996 1.837 4.144 1.837 6.446 0 2.303-.612 4.451-1.837 6.446-1.17 1.919-2.767 3.44-4.79 4.566-2.05 1.151-4.285 1.727-6.707 1.727V32L7.99 23.98l8.343-8.018v6.446c1.81 0 3.48-.429 5.01-1.286 1.53-.857 2.741-2.02 3.633-3.491.892-1.471 1.337-3.076 1.337-4.816 0-1.74-.445-3.344-1.337-4.815-.892-1.47-2.102-2.635-3.633-3.492-1.53-.857-3.2-1.285-5.01-1.285-1.81 0-3.48.428-5.01 1.285C9.793 5.365 8.583 6.53 7.691 8c-.892 1.47-1.338 3.076-1.338 4.815H3c0-2.302.612-4.45 1.836-6.446 1.171-1.944 2.768-3.479 4.79-4.604C11.704.588 13.939 0 16.334 0z"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="PathBorder"
                                    Property="Background"
                                    Value="{StaticResource Action.Disabled.Background}"/>
                            <Setter TargetName="ButtonPath"
                                    Property="Fill"
                                    Value="{StaticResource Action.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomButtonTextBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomButtonTextBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="HeaderGrid"
                              Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <local:CustomTextBlock x:Name="tbMandatory"
                                                   Grid.Column="0"
                                                   Text="* "
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbHeader"
                                                   Grid.Column="1"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   TextTrimming="CharacterEllipsis"
                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <Border x:Name="ContentBorder"
                                Grid.Row="1"
                                CornerRadius="{StaticResource CornerRadius}"
                                Margin="0,8,0,0"
                                BorderBrush="{StaticResource Control.BorderBrush}"
                                BorderThickness="{StaticResource Control.Border.Thickness}"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="Transparent"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Padding="{Binding ElementName=tbDefaultValue,Path=Padding}">
                                    <ScrollViewer  x:Name="PART_ContentHost"
                                                   Focusable="false"
                                                   Foreground="{StaticResource Control.DefaultTextForeground}"
                                                   HorizontalScrollBarVisibility="Hidden"
                                                   VerticalScrollBarVisibility="Hidden" />
                                </Border>
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                       Grid.Column="0"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       VerticalAlignment="Center"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="Hidden" />
                                <Button x:Name="btnAction"
                                        Grid.Column="1"
                                        Style="{StaticResource CustomButtonTextBoxButtonStyle}"/>
                            </Grid>
                        </Border>
                        <local:CustomTextBlock x:Name="tbErrorMessage"
                                               Grid.Row="2"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                               Padding="2,5,0,0"
                                               Margin="0,0,0,5"
                                               Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbMandatory"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="BorderThickness"
                                    TargetName="ContentBorder"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="HeaderGrid"
                                    Value="Collapsed" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    TargetName="tbDefaultValue"
                                    Value="{StaticResource CustomButtonTextBox.Padding.XSmall}" />
                            <Setter Property="Height"
                                    Value="{StaticResource CheckBox.Large}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="Margin"
                                    TargetName="ContentBorder"
                                    Value="2,0,0,0" />
                            <Setter Property="Padding"
                                    TargetName="tbErrorMessage"
                                    Value="0,4,0,0" />
                            <Setter Property="TextSize"
                                    TargetName="tbErrorMessage"
                                    Value="Small" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbErrorMessage"
                                    Value="XSmall" />
                            <Setter Property="Padding"
                                    TargetName="tbDefaultValue"
                                    Value="{StaticResource CustomButtonTextBox.Padding.XSmall}" />
                            <Setter Property="Margin"
                                    TargetName="ContentBorder"
                                    Value="2,0,0,0" />
                            <Setter Property="Padding"
                                    TargetName="tbErrorMessage"
                                    Value="0,4,0,0" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    TargetName="tbDefaultValue"
                                    Value="{StaticResource CustomButtonTextBox.Padding.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    TargetName="tbDefaultValue"
                                    Value="{StaticResource CustomButtonTextBox.Padding.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    TargetName="tbDefaultValue"
                                    Value="{StaticResource CustomButtonTextBox.Padding.Small}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="NonEmpty"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Regular}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Visible" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                                <Condition Property="IsFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="ContentBorder"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom textbox date picker -->

    <Style TargetType="{x:Type local:CustomTextBoxDatePicker}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Control.BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource Control.Border.Thickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomTextBoxDatePicker}">
                    <Grid x:Name="CustomTextBoxDatePicker_Grid_Main">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"
                                           x:Name="CustomTextBoxDatePicker_Grid_Row_Heading" />
                            <RowDefinition Height="2*"
                                           x:Name="CustomTextBoxDatePicker_Grid_Row_Content" />
                            <RowDefinition Height="Auto"
                                           x:Name="CustomTextBoxDatePicker_Grid_Row_Error" />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="CustomTextBoxDatePicker_Grid_Row_Heading_StackPanel"
                                    Orientation="Horizontal"
                                    Grid.Row="0">
                            <local:CustomTextBlock x:Name="tbCustomTextBoxDatePickerMandatory"
                                                   Text="* "
                                                   Visibility="Collapsed" />
                            <local:CustomTextBlock x:Name="tbCustomTextBoxDatePickerHeader"
                                                   TextTrimming="CharacterEllipsis"
                                                   Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
                        </StackPanel>
                        <Border Grid.Row="1"
                                CornerRadius="8"
                                Margin="0,8,0,0"
                                x:Name="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                BorderBrush="{StaticResource Control.BorderBrush}"
                                BorderThickness="{StaticResource Control.Border.Thickness}"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="CustomTextBoxDatePicker_Grid_Content_Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6*"
                                                      x:Name="CustomTextBoxDatePicker_Grid_Content_Grid_ColText" />
                                    <ColumnDefinition Width="Auto"
                                                      x:Name="CustomTextBoxDatePicker_Grid_Content_Grid_ColErrorImage" />

                                </Grid.ColumnDefinitions>
                                <local:CustomTextBlock x:Name="tbDefaultValue"
                                                       VerticalAlignment="Center"
                                                       Foreground="{StaticResource Control.BorderBrush}"
                                                       Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                                       Grid.Column="0"
                                                       Visibility="Collapsed" />
                                <ScrollViewer Grid.Column="0"
                                              x:Name="PART_ContentHost"
                                              Focusable="false"
                                              Foreground="{StaticResource Control.DefaultTextForeground}"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                                <Button x:Name="btnOpenDatePicker"
                                        Grid.Column="1"
                                        Margin="0,0,16,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="Transparent">
                                                            <Grid>
                                                                <Path Data="M0 0H24V24H0z" />
                                                                <Path Data="M21.5 24c.667 0 1.25-.25 1.75-.75s.75-1.083.75-1.75v-17c0-.667-.25-1.25-.75-1.75S22.167 2 21.5 2H20V0h-3v2H7V0H4v2H2.5c-.667 0-1.25.25-1.75.75S0 3.833 0 4.5v17c0 .667.25 1.25.75 1.75S1.833 24 2.5 24h19zm0-2.5h-19V8.25h19V21.5zM8.5 16v-3h-3v3h3zm5 0v-3h-3v3h3zm5 0v-3h-3v3h3z"
                                                                      Fill="{StaticResource Control.BorderBrush.Focused}"
                                                                      Stretch="Uniform" />
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                        <local:CustomTextBlock Grid.Row="2"
                                               x:Name="tbErrorMessage"
                                               TextTrimming="CharacterEllipsis"
                                               Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                               Visibility="{Binding ErrorVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                               Padding="2,5,0,0"
                                               Margin="0,0,0,5"
                                               Foreground="{StaticResource Control.BorderBrush.Error}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Heading"
                                 Value="{x:Static sys:String.Empty}">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ErrorTextVisible"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="tbErrorMessage"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ErrorState"
                                           Value="False">
                                </Condition>
                                <Condition Property="IsFocused"
                                           Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text"
                                           Value="{x:Static sys:String.Empty}"/>
                                <Condition Property="IsFocused"
                                           Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="tbDefaultValue"
                                    Value="Visible" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="FontWeight"
                                    Value="{StaticResource FontWeight.Bold}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="DataGridSize">
                            <Setter Property="Margin"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="0" />
                            <Setter Property="BorderThickness"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="0" />
                            <Setter Property="Visibility"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Heading_StackPanel"
                                    Value="Collapsed" />
                            <Setter Property="Height"
                                    Value="{StaticResource CheckBox.Small}" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Center" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Height"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Small}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="XSmall" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="XSmall" />
                            <Setter Property="Width"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource Font.XSmall}" />
                            <Setter Property="Height"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource Font.XSmall}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Large}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="Large" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="Large" />
                            <Setter Property="Width"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Large}" />
                            <Setter Property="Height"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Large}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Medium}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="Medium" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="Medium" />
                            <Setter Property="Width"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Medium}" />
                            <Setter Property="Height"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="Size"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Padding"
                                    Value="{StaticResource Padding.Small}" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerHeader"
                                    Value="Small" />
                            <Setter Property="TextSize"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="Small" />
                            <Setter Property="Width"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Small}" />
                            <Setter Property="Height"
                                    TargetName="btnOpenDatePicker"
                                    Value="{StaticResource FontSize.Small}" />
                        </Trigger>

                        <Trigger Property="IsMandatory"
                                 Value="True">
                            <Setter Property="Visibility"
                                    TargetName="tbCustomTextBoxDatePickerMandatory"
                                    Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="NonEmpty"
                                           Value="True" />
                                <Condition Property="ErrorState"
                                           Value="False" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    TargetName="PART_ContentHost"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </MultiTrigger>
                        <Trigger Property="ErrorState"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="CustomTextBoxDatePicker_Grid_Row_Content_Border"
                                    Value="{StaticResource Control.BorderBrush.Error}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Style for custom combobox -->

    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource Control.Heading.ForeGround}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type local:CustomComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"
                               x:Name="CustomComboBox_Grid_Row_Content" />
                <RowDefinition Height="Auto"
                               x:Name="CustomComboBox_Grid_Row_Error" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="CustomComboBox_Grid_Row_Heading"
                        Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <local:CustomTextBlock x:Name="tbCustomComboBoxMandatory"
                                       Text="* "
                                       Grid.Column="0"
                                       Visibility="Collapsed" />
                <local:CustomTextBlock x:Name="tbCustomComboBoxHeader"
                                       Grid.Column="1"
                                       TextTrimming="CharacterEllipsis"
                                       Text="{Binding Heading, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>

            <Popup Grid.Row="1"
                   x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   Grid.RowSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               Color="Transparent"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <local:CustomScrollViewer x:Name="DropDownScrollViewer"
                                                  Size="XSmall"
                                                  Margin="0,8,8,8">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <local:CustomDataGridUserControl DataContext="{Binding CustomDataGridVM,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CustomComboBox}}"
                                                                 x:Name="DisplayMemberPathCollectionDataGrid"
                                                                 IsTabStop="True">
                                    <local:CustomDataGridUserControl.Style>
                                        <Style TargetType="{x:Type local:CustomDataGridUserControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visibility, ElementName=ItemsPresenter}"
                                                             Value="Visible">
                                                    <Setter Property="Visibility"
                                                            Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </local:CustomDataGridUserControl.Style>
                                </local:CustomDataGridUserControl>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ItemsPresenter.Style>
                                        <Style TargetType="{x:Type ItemsPresenter}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DisplayMemberPathCollection, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomComboBox}}"
                                                             Value="{x:Null}">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsPresenter.Style>
                                </ItemsPresenter>
                            </Grid>
                        </local:CustomScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>

            <Border x:Name="ComboBoxBorder"
                    Grid.Row="1"
                    Margin="0,8,0,0"
                    Grid.ColumnSpan="2"
                    BorderThickness="{StaticResource Control.Border.Thickness}"
                    BorderBrush="{StaticResource Control.BorderBrush.Focused}"
                    CornerRadius="{StaticResource CornerRadius}"
                    Background="{StaticResource Control.BackGround}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             x:Name="PART_EditableTextBox"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="{TemplateBinding Padding}"
                             Style="{StaticResource ComboBoxEditableTextBox}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <local:CustomTextBlock x:Name="tbDefaultValue"
                                           Foreground="{StaticResource Control.BorderBrush}"
                                           Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                           Text="{Binding DefaultValue,RelativeSource={RelativeSource TemplatedParent}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource TemplatedParent}}"
                                           Grid.Column="0"
                                           VerticalAlignment="Center"
                                           Visibility="Collapsed" />
                    <ToggleButton Grid.Column="1"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  KeyboardNavigation.TabNavigation="None"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="8">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Background="Transparent">
                                                <Grid VerticalAlignment="Center"
                                                      HorizontalAlignment="Center">
                                                    <Path Data="M0 0H24V24H0z" />
                                                    <Path x:Name="DownArrowPath"
                                                          Data="M16.667 24L19 21.6 9.74 12 19 2.4 16.667 0 5 12z"
                                                          Fill="{StaticResource Control.BorderBrush.Focused}"
                                                          RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=IsFocused, ElementName= PART_EditableTextBox}"
                                                                   Value="True" />
                                                        <Condition Binding="{Binding Path=HasItems, RelativeSource= {RelativeSource FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Fill"
                                                                TargetName="DownArrowPath"
                                                                Value="{StaticResource Control.BorderBrush}" />
                                                        <Setter Property="IsEnabled"
                                                                Value="False" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=Text, ElementName= PART_EditableTextBox}"
                                                                   Value="{x:Static sys:String.Empty}" />
                                                        <Condition Binding="{Binding Path=IsFocused, ElementName= PART_EditableTextBox}"
                                                                   Value="False" />
                                                        <Condition Binding="{Binding Path=IsFocused, RelativeSource= {RelativeSource FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                   Value="False" />
                                                        <Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource= {RelativeSource FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                   Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Fill"
                                                            TargetName="DownArrowPath"
                                                            Value="{StaticResource Control.BorderBrush}" />
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </Grid>
            </Border>

            <local:CustomTextBlock Grid.Row="2"
                                   x:Name="tbErrorMessage"
                                   TextTrimming="CharacterEllipsis"
                                   Visibility="Hidden"
                                   Padding="2,5,0,0"
                                   Margin="0,0,0,5"
                                   Foreground="{StaticResource Control.BorderBrush.Error}" />
        </Grid>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Text"
                               Value="{x:Static sys:String.Empty}" />
                    <Condition Property="IsFocused"
                               Value="False" />
                    <Condition Property="IsFocused"
                               SourceName="PART_EditableTextBox"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Visibility"
                            TargetName="tbDefaultValue"
                            Value="Visible" />
                    <Setter Property="BorderBrush"
                            TargetName="ComboBoxBorder"
                            Value="{StaticResource Control.BorderBrush}" />
                    <Setter Property="Foreground"
                            Value="{StaticResource Control.BorderBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsDropDownOpen"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="tbErrorMessage"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="ErrorTextVisible"
                     Value="False">
                <Setter Property="Visibility"
                        TargetName="tbErrorMessage"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMandatory"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Size"
                     Value="DataGridSize">
                <Setter Property="Margin"
                        TargetName="ComboBoxBorder"
                        Value="0" />
                <Setter Property="Visibility"
                        TargetName="CustomComboBox_Grid_Row_Heading"
                        Value="Collapsed" />
                <Setter Property="Height"
                        Value="{StaticResource CheckBox.Small}" />
                <Setter Property="VerticalContentAlignment"
                        TargetName="PART_EditableTextBox"
                        Value="Center" />
                <Setter Property="Visibility"
                        TargetName="tbErrorMessage"
                        Value="Collapsed" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Small}" />
                <Setter Property="Padding"
                        TargetName="PART_EditableTextBox"
                        Value="{StaticResource CustomComboBox.Padding.XSmall}" />
                <Setter Property="TextSize"
                        TargetName="tbDefaultValue"
                        Value="Small" />
                <Setter Property="Padding"
                        TargetName="tbDefaultValue"
                        Value="{StaticResource CustomComboBox.Padding.XSmall}" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="Small" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxHeader"
                        Value="Small" />
            </Trigger>
            <Trigger Property="Size"
                     Value="XSmall">
                <Setter Property="TextSize"
                        TargetName="tbDefaultValue"
                        Value="XSmall" />
                <Setter Property="Padding"
                        TargetName="tbDefaultValue"
                        Value="{StaticResource CustomComboBox.Padding.XSmall}" />
                <Setter Property="VerticalContentAlignment"
                        TargetName="PART_EditableTextBox"
                        Value="Center" />
                <Setter Property="FontSize"
                        Value="{StaticResource Font.XSmall}" />
                <Setter Property="Padding"
                        TargetName="PART_EditableTextBox"
                        Value="{StaticResource CustomComboBox.Padding.XSmall}" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="XSmall" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxHeader"
                        Value="XSmall" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Large">
                <Setter Property="TextSize"
                        TargetName="tbDefaultValue"
                        Value="Large" />
                <Setter Property="Padding"
                        TargetName="tbDefaultValue"
                        Value="{StaticResource CustomComboBox.Padding.Large}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Large}" />
                <Setter Property="Padding"
                        TargetName="PART_EditableTextBox"
                        Value="{StaticResource CustomComboBox.Padding.Large}" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="Large" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxHeader"
                        Value="Large" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Medium">
                <Setter Property="TextSize"
                        TargetName="tbDefaultValue"
                        Value="Medium" />
                <Setter Property="Padding"
                        TargetName="tbDefaultValue"
                        Value="{StaticResource CustomComboBox.Padding.SmallAndMedium}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Medium}" />
                <Setter Property="Padding"
                        TargetName="PART_EditableTextBox"
                        Value="{StaticResource CustomComboBox.Padding.SmallAndMedium}" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="Medium" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxHeader"
                        Value="Medium" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="TextSize"
                        TargetName="tbDefaultValue"
                        Value="Small" />
                <Setter Property="Padding"
                        TargetName="tbDefaultValue"
                        Value="{StaticResource CustomComboBox.Padding.SmallAndMedium}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Small}" />
                <Setter Property="Padding"
                        TargetName="PART_EditableTextBox"
                        Value="{StaticResource CustomComboBox.Padding.SmallAndMedium}" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxMandatory"
                        Value="Small" />
                <Setter Property="TextSize"
                        TargetName="tbCustomComboBoxHeader"
                        Value="Small" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        TargetName="ComboBoxBorder"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Black" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="shadow"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="ErrorState"
                     Value="True">
                <Setter Property="BorderBrush"
                        TargetName="ComboBoxBorder"
                        Value="{StaticResource Control.BorderBrush.Error}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type local:CustomComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow"
                                               Color="Transparent"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1"
                            Background="{StaticResource Control.ComboBackground}">
                        <local:CustomScrollViewer x:Name="DropDownScrollViewer"
                                                  Size="XSmall"
                                                  Margin="0,8,8,8">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </local:CustomScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>

            <Border Grid.ColumnSpan="2"
                    x:Name="InnerBorder"
                    BorderThickness="0,0,0,3"
                    Background="{StaticResource Control.ComboBackground}"
                    BorderBrush="{StaticResource Control.BorderBrush}"
                    CornerRadius="{StaticResource CornerRadius}">
                <ToggleButton HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"
                              x:Name="toggleButton"
                              Background="Red"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="0"
                              Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="CustomComboBox_OuterBorder"
                                                Background="Transparent">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="8*" />
                                                    <ColumnDefinition Width="2*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid x:Name="CustomComboBox_Grid_Row_Heading"
                                                      Grid.Row="0"
                                                      Grid.Column="0"
                                                      Margin="0,0,0,6">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <local:CustomTextBlock x:Name="tbCustomComboBoxMandatory"
                                                                           Text="* "
                                                                           Grid.Column="0"
                                                                           Visibility="Collapsed" />
                                                    <local:CustomTextBlock x:Name="tbCustomComboBoxHeader"
                                                                           Grid.Column="1"
                                                                           TextTrimming="CharacterEllipsis"
                                                                           Text="{Binding Heading, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}" />
                                                </Grid>
                                                <local:CustomTextBlock x:Name="tbCustomComboBoxDefaultValue"
                                                                       Grid.Column="0"
                                                                       TextTrimming="CharacterEllipsis"
                                                                       Grid.Row="1"
                                                                       Text="{Binding DefaultValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                       FontWeight="{StaticResource FontWeight.SemiBold}"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                       Visibility="Collapsed" />
                                                <ContentPresenter Grid.Row="1"
                                                                  Grid.Column="0"
                                                                  x:Name="contentPresenter"
                                                                  ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}} }"
                                                                  ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                  Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                  ContentStringFormat="{Binding SelectionBoxItemStringFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                                  IsHitTestVisible="false"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                <Grid x:Name="Image_Grid"
                                                      Grid.RowSpan="2"
                                                      Grid.Column="1"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center">
                                                    <Path Data="M0 0h24v24H0z" />
                                                    <Path Data="M12 16L4 8h16z"
                                                          Fill="{StaticResource Control.BorderBrush.Focused}" />
                                                </Grid>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsDefaultValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        TargetName="tbCustomComboBoxDefaultValue"
                                                        Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMandatory, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        TargetName="tbCustomComboBoxMandatory"
                                                        Value="Visible" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMandatory, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                               Value="False" />
                                                    <Condition Binding="{Binding Path=Heading, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                               Value="{x:Static sys:String.Empty}" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility"
                                                            TargetName="CustomComboBox_Grid_Row_Heading"
                                                            Value="Collapsed" />
                                                    <Setter Property="Margin"
                                                            TargetName="CustomComboBox_Grid_Row_Heading"
                                                            Value="0" />
                                                    <Setter Property="Grid.RowSpan"
                                                            TargetName="contentPresenter"
                                                            Value="2" />
                                                    <Setter Property="Grid.Row"
                                                            TargetName="contentPresenter"
                                                            Value="0" />
                                                    <Setter Property="VerticalAlignment"
                                                            TargetName="contentPresenter"
                                                            Value="Center" />
                                                    <Setter Property="Grid.RowSpan"
                                                            TargetName="tbCustomComboBoxDefaultValue"
                                                            Value="2" />
                                                    <Setter Property="Grid.Row"
                                                            TargetName="tbCustomComboBoxDefaultValue"
                                                            Value="0" />
                                                    <Setter Property="VerticalAlignment"
                                                            TargetName="tbCustomComboBoxDefaultValue"
                                                            Value="Center" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="XSmall">
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxDefaultValue"
                                                        Value="XSmall" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxMandatory"
                                                        Value="XSmall" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxHeader"
                                                        Value="XSmall" />
                                                <Setter Property="Padding"
                                                        TargetName="CustomComboBox_OuterBorder"
                                                        Value="{StaticResource CustomComboBox.NonEditable.Padding.XSmall}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="Large">
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxDefaultValue"
                                                        Value="Large" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxMandatory"
                                                        Value="Medium" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxHeader"
                                                        Value="Medium" />
                                                <Setter Property="Padding"
                                                        TargetName="CustomComboBox_OuterBorder"
                                                        Value="{StaticResource Padding.Large}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="Medium">
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxDefaultValue"
                                                        Value="Medium" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxMandatory"
                                                        Value="Small" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxHeader"
                                                        Value="Small" />
                                                <Setter Property="Padding"
                                                        TargetName="CustomComboBox_OuterBorder"
                                                        Value="{StaticResource Padding.Medium}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                                         Value="Small">
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxDefaultValue"
                                                        Value="Small" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxMandatory"
                                                        Value="XSmall" />
                                                <Setter Property="TextSize"
                                                        TargetName="tbCustomComboBoxHeader"
                                                        Value="XSmall" />
                                                <Setter Property="Padding"
                                                        TargetName="CustomComboBox_OuterBorder"
                                                        Value="{StaticResource Padding.Small}" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HideBackground"
                     Value="True">
                <Setter Property="BorderThickness"
                        TargetName="InnerBorder"
                        Value="0" />
            </Trigger>
            <Trigger Property="Size"
                     Value="XSmall">
                <Setter Property="FontSize"
                        Value="{StaticResource Font.XSmall}" />
                <Setter Property="Padding"
                        TargetName="toggleButton"
                        Value="0" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Large">
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Large}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Large}" />
                <Setter Property="Padding"
                        TargetName="toggleButton"
                        Value="{StaticResource Padding.Large}" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Medium">
                <Setter Property="Padding"
                        TargetName="toggleButton"
                        Value="{StaticResource Padding.Medium}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Medium}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Medium}" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="Padding"
                        TargetName="toggleButton"
                        Value="{StaticResource Padding.Small}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Small}" />
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Small}" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="shadow"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="VirtualizingStackPanelTemplates">
        <VirtualizingStackPanel />
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type local:CustomComboBox}">
        <Style.Resources>
            <Style TargetType="ComboBoxItem">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="{StaticResource CustomComboBox.Item.Margin}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                 Value="DataGridSize">
                        <Setter Property="Height"
                                Value="{StaticResource CustomComboBox.Item.XSmall.Width}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                 Value="XSmall">
                        <Setter Property="Height"
                                Value="{StaticResource CustomComboBox.Item.XSmall.Width}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                 Value="Small">
                        <Setter Property="Height"
                                Value="{StaticResource CustomComboBox.Item.SmallMediumLarge.Width}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                 Value="Medium">
                        <Setter Property="Height"
                                Value="{StaticResource CustomComboBox.Item.SmallMediumLarge.Width}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType = {x:Type local:CustomComboBox}}}"
                                 Value="Large">
                        <Setter Property="Height"
                                Value="{StaticResource CustomComboBox.Item.SmallMediumLarge.Width}" />
                    </DataTrigger>
                </Style.Triggers>

            </Style>
        </Style.Resources>
        <Setter Property="ItemsPanel"
                Value="{StaticResource VirtualizingStackPanelTemplates}"/>
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontStretch"
                Value="{StaticResource FontStretch}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
                <Setter Property="FontWeight"
                        Value="{StaticResource FontWeight.Regular}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region style for custom date picker-->
    <Style TargetType="ToggleButton"
           x:Key="DateButtonStyle">
        <Setter Property="Width"
                Value="{StaticResource DateButtonWidthAndHeight}" />
        <Setter Property="Height"
                Value="{StaticResource DateButtonWidthAndHeight}" />
        <Setter Property="FontSize"
                Value="{StaticResource FontSize.Small}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="Margin"
                Value="{StaticResource DateButtonMargin}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            CornerRadius="{StaticResource CornerRadius}"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Checked.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource CustomToggleButton.Checked.Foreground}" />
                        </Trigger>           
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.UnChecked.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource CustomToggleButton.UnChecked.Foreground}" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Disabled.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"
                                           Value="True" />
                                <Condition Property="IsEnabled"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource CustomToggleButton.Checked.Disabled.Background}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="LeftNavigationButtonStyle">
        <Setter Property="Width"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Height"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Background"
                Value="{StaticResource Control.ComboBackground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Grid Name="LeftArrowGrid"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0h24v24H0z" />
                            <Path Fill="{StaticResource Control.Checked.Background}"
                                  Name="LeftArrowPath"
                                  Data="M16.667 0L19 2.4 9.74 12 19 21.6 16.667 24 5 12z" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Control.ComboBackground}" />
                            <Setter Property="Path.Fill"
                                    TargetName="LeftArrowPath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true">
                            <Setter Property="Path.Fill"
                                    TargetName="LeftArrowPath"
                                    Value="{StaticResource Control.Checked.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="RightNavigationButtonStyle">
        <Setter Property="Width"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Height"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Background"
                Value="{StaticResource Control.ComboBackground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H24V24H0z" />
                            <Path Fill="{StaticResource Control.Checked.Background}"
                                  Name="RightArrowPath"
                                  Data="M16.667 24L19 21.6 9.74 12 19 2.4 16.667 0 5 12z"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Control.ComboBackground}" />
                            <Setter Property="Path.Fill"
                                    TargetName="RightArrowPath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true">
                            <Setter Property="Path.Fill"
                                    TargetName="RightArrowPath"
                                    Value="{StaticResource Control.Checked.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label"
           x:Key="DaysLabelStyle">
        <Setter Property="FontSize"
                Value="{StaticResource FontSize.Small}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <!--#endregion-->

    <!--#region Style for custom action button style-->

    <Style TargetType="{x:Type Button}"
           x:Key="RedemptionActionButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource Action.Active.Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource Action.Active.Foreground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="{StaticResource BorderThickness}"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <TextBlock x:Name="tbContent"
                                   Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap"
                                   TextTrimming="CharacterEllipsis"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                            <Setter Property="Background"
                                    Value="{StaticResource Action.Disabled.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomActionButton}">
        <Setter Property="Height"
                Value="{StaticResource CustomActionButton.Height}" />
        <Setter Property="Background"
                Value="{StaticResource Action.Active.Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource Action.Active.Foreground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ToolTipService.ShowOnDisabled"
                Value="True" />
        <Setter Property="ToolTip"
                Value="{Binding Path=Content,RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomActionButton}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{StaticResource BorderThickness}"
                            SnapsToDevicePixels="true">
                        <TextBlock x:Name="tbContent"
                                   TextWrapping="Wrap"
                                   Text="{Binding Content,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CustomActionButton}, Converter={StaticResource UpperCaseConverter}}"
                                   TextTrimming="{TemplateBinding TextTrimming}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextSize"
                                 Value="Small">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Small}" />
                        </Trigger>
                        <Trigger Property="TextSize"
                                 Value="Medium">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Medium}" />
                        </Trigger>
                        <Trigger Property="TextSize"
                                 Value="Large">
                            <Setter Property="FontSize"
                                    Value="{StaticResource FontSize.Large}" />
                        </Trigger>
                        <Trigger Property="TextSize"
                                 Value="XSmall">
                            <Setter Property="FontSize"
                                    Value="{StaticResource Font.XSmall}" />
                        </Trigger>
                        <Trigger Property="HideBackground"
                                 Value="True">
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ActionStyle"
                                           Value="Active" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HideBackground"
                                           Value="True" />
                                <Condition Property="IsEnabled"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Active.Foreground}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HideBackground"
                                           Value="True" />
                                <Condition Property="IsEnabled"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                        </MultiTrigger>

                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="ActionStyle"
                                 Value="Passive">
                            <Setter Property="Background"
                                    Value="{StaticResource Action.Passive.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Passive.Foreground}" />
                        </Trigger>
                        <Trigger Property="ActionStyle"
                                 Value="Light">
                            <Setter Property="Background"
                                    Value="{StaticResource Action.Light.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Light.Foreground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource Control.BorderBrush}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="{StaticResource Action.Light.BorderThickness}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource Action.Disabled.Foreground}" />
                            <Setter Property="Background"
                                    Value="{StaticResource Action.Disabled.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region style for custom text block-->

    <Thickness x:Key="ContextSearchTextBlockMargin"
               Left="10"
               Bottom="10"
               Top="10"
               Right="0" />

    <Style TargetType="{x:Type local:CustomTextBlock}">
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontStretch"
                Value="{StaticResource FontStretch}" />
        <Setter Property="Foreground"
                Value="{StaticResource Control.Heading.ForeGround}" />
        <Style.Triggers>
            <Trigger Property="TextSize"
                     Value="Large">
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Large}" />
            </Trigger>
            <Trigger Property="TextSize"
                     Value="Medium">
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Medium}" />
            </Trigger>
            <Trigger Property="TextSize"
                     Value="Small">
                <Setter Property="FontSize"
                        Value="{StaticResource FontSize.Small}" />
            </Trigger>
            <Trigger Property="TextSize"
                     Value="XSmall">
                <Setter Property="FontSize"
                        Value="{StaticResource Font.XSmall}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region keyboard style-->
    <Style x:Key="KeyboardFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle Name="rKey"
                                   StrokeThickness="1"
                                   Stroke="Black"
                                   StrokeDashArray="2 2" />
                        <Border Name="border"
                                Width="{TemplateBinding ActualWidth}"
                                Height="{TemplateBinding ActualHeight}"
                                CornerRadius="8"
                                BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KeyboardShadowStyle">
        <Setter Property="Control.Foreground"
                Value="LightGray" />
    </Style>

    <Style x:Key="KeyboardStyle"
           TargetType="Window">
        <Setter Property="WindowState"
                Value="Normal" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="ShowActivated"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style x:Key="InformButton"
           TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Margin"
                Value="4" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize"
                Value="{StaticResource FontSize.Medium}" />
        <Setter Property="Foreground"
                Value="{StaticResource Keyboard.Foreground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Regular}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource KeyboardFocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource Keyboard.Background}" />
        <Setter Property="MinHeight"
                Value="{StaticResource KeyBoard.Button.MinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="0"
                            Padding="8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <local:CustomTextBlock x:Name="tbContent"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   FontWeight="{TemplateBinding FontWeight}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource Keyboard.Foreground}"
                                                   Text="{Binding Content,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Converter={StaticResource UpperCaseConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding CapsLockFlag}"
                                     Value="False">
                            <Setter Property="Text"
                                    TargetName="tbContent"
                                    Value="{Binding Content,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Converter={StaticResource LowerCaseConverter}}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="tbContent"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.Focussed}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.Focussed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.7" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Keyboard.Key.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NumberKeyBoardBackspaceButton"
           TargetType="Button">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Margin"
                Value="4" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize"
                Value="{StaticResource FontSize.Medium}" />
        <Setter Property="Foreground"
                Value="{StaticResource Keyboard.Foreground}" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Regular}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource KeyboardFocusVisual}" />
        <Setter Property="MinHeight"
                Value="{StaticResource KeyBoard.Button.MinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="Transparent"
                            Padding="15">
                        <Path Data="M646 1498 c-373 -281 -466 -356 -466 -374 0 -18 85 -86 422 -340 233 -175 442 -333 466 -351 49 -37 64 -40 86 -17 13 12 16 41 16 155 l0 139 414 0 415 0 15 22 c14 19 16 74 16 393 0 319 -2 374 -16 393 l-15 22 -415 0 -414 0 0 139 c0 114 -3 143 -16 155 -8 9 -21 16 -28 16 -7 0 -223 -158 -480 -352z"
                              Fill="{StaticResource Keyboard.Foreground}"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.Focussed}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{StaticResource Keyboard.Key.Focussed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.7" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Keyboard.Key.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for task window style -->

    <Style TargetType="{x:Type Button}"
           x:Key="KeyboardButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{StaticResource Control.BorderBrush}"
                            BorderThickness="0,0,0,3"
                            CornerRadius="{StaticResource CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <Grid Margin="12"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H54V32H0z" />
                            <Path Data="M50.4 32c1.997 0 3.6-1.583 3.6-3.556V3.556C54 1.583 52.397 0 50.4 0H3.6C1.603 0 0 1.583 0 3.556v24.888C0 30.417 1.603 32 3.6 32h46.8zm0-3.556H3.6V3.556h46.8v24.888zM10.35 10.667c.253 0 .45-.195.45-.445V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.195.45-.445V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.195.45-.445V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.195.45-.445V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.195.45-.445V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 7.11c.253 0 .45-.194.45-.444V7.556c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v6.666h-3.15c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h6.3zm-32.4 0c.253 0 .45-.194.45-.444v-2.666c0-.25-.197-.445-.45-.445h-6.3c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h6.3zm7.2 0c.253 0 .45-.194.45-.444v-2.666c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.194.45-.444v-2.666c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm7.2 0c.253 0 .45-.194.45-.444v-2.666c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm-25.2 7.112c.253 0 .45-.195.45-.445v-2.666c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7zm28.8 0c.253 0 .45-.195.45-.445v-2.666c0-.25-.197-.445-.45-.445h-24.3c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h24.3zm7.2 0c.253 0 .45-.195.45-.445v-2.666c0-.25-.197-.445-.45-.445h-2.7c-.253 0-.45.195-.45.445v2.666c0 .25.197.445.45.445h2.7z"
                                  Fill="{StaticResource Control.BorderBrush.Focused}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:LeftPaneHeadingConverter x:Key="HeadingConverter"></local:LeftPaneHeadingConverter>
    <local:IndexConverter x:Key="IndexConverter"></local:IndexConverter>

    <Style TargetType="{x:Type Window}"
           x:Key="TaskWindowStyle">
        <Setter Property="Top"
                Value="0" />
        <Setter Property="Left"
                Value="0" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="72" />
                        </Grid.RowDefinitions>
                        <Border Name="PopupWindowBackground"
                                Background="{StaticResource Window.Popup.Background}"
                                Grid.Row="0">
                            <Border Name="GridBorder"
                                    Background="{StaticResource Control.BackGround}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Margin="20,10">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0"></ContentPresenter>
                                    <Border Grid.Row="1"
                                            BorderThickness="0,1,0,0"
                                            BorderBrush="{StaticResource Control.BorderBrush}"
                                            Padding="0,8">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <local:CustomTextBox x:Name="tbxRemarks"
                                                                 Grid.Row="0"
                                                                 Heading="Remarks"
                                                                 Size="Small"
                                                                 IsMandatory="{Binding IsRemarkMandatory}"
                                                                 Text="{Binding Remarks}"
                                                                 Margin="16,0,16,8"
                                                                 ErrorTextVisible="False">
                                                <local:CustomTextBox.Style>
                                                    <Style TargetType="{x:Type local:CustomTextBox}"
                                                           BasedOn="{StaticResource {x:Type local:CustomTextBox}}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ShowRemark}"
                                                                         Value="False">
                                                                <Setter Property="Visibility"
                                                                        Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </local:CustomTextBox.Style>
                                            </local:CustomTextBox>
                                            <StackPanel Orientation="Horizontal"
                                                        Grid.Row="1"
                                                        Margin="0,0,16,0"
                                                        HorizontalAlignment="Center">
                                                <local:CustomActionButton x:Name="btnClear"
                                                                          Content="CLEAR"
                                                                          Padding="32,0"
                                                                          MinWidth="{StaticResource ActionButton.Width}"
                                                                          ActionStyle="Passive"
                                                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                                                          Command="{Binding ClearCommand}" />
                                                <local:CustomActionButton x:Name="btnOk"
                                                                          Padding="32,0"
                                                                          Margin="{StaticResource OkAndYearMargin}"
                                                                          Content="CONFIRM"
                                                                          MinWidth="{StaticResource ActionButton.Width}"
                                                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                                                          Command="{Binding OkCommand}" />
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Border>
                        <local:FooterUserControl x:Name="FooterUserControl"
                                                 DataContext="{Binding FooterVM}"
                                                 Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Style for popup window with footer-->

    <Style x:Key="PopupWithFooterWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Top"
                Value="0" />
        <Setter Property="Left"
                Value="0" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="72" />
                        </Grid.RowDefinitions>
                        <Border Name="PopupWindowBackground"
                                Background="{StaticResource Window.Popup.Background}"
                                Grid.Row="0">
                            <Border Name="GridBorder"
                                    Background="{StaticResource Control.BackGround}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Margin="20,10">
                                <ContentPresenter x:Name="ContentPresenter"/>
                            </Border>
                        </Border>
                        <local:FooterUserControl x:Name="FooterUserControl"
                                                 DataContext="{Binding FooterVM}"
                                                 Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->


    <!--#region Style for navigation button style-->
    <ControlTemplate TargetType="{x:Type Button}"
                     x:Key="NavigationTemplate">
        <Border x:Name="NavigationButtonIconOutsideBorder"
                Background="Transparent"
                Padding="8">
            <Path x:Name="NavigationButtonIconArrowPath"
                  Fill="{StaticResource LeftPane.Foreground}"
                  Data="M16.667 0L19 2.4 9.74 12 19 21.6 16.667 24 5 12z"
                  Stretch="Uniform" />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}"
           x:Key="BackButtonStyle">
        <Setter Property="Width"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Height"
                Value="{Binding Width,RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template"
                Value="{StaticResource NavigationTemplate}" />
    </Style>

    <ControlTemplate TargetType="{x:Type Button}"
                     x:Key="TaskPopupNavigationTemplate">
        <Border x:Name="NavigationButtonIconOutsideBorder"
                Background="Transparent"
                Padding="8">
            <Path x:Name="NavigationButtonIconArrowPath"
                  Fill="{StaticResource LeftPane.TextBlock.Foreground}"
                  Data="M16.667 0L19 2.4 9.74 12 19 21.6 16.667 24 5 12z"
                  Stretch="Uniform" />
        </Border>
    </ControlTemplate>
    <Style TargetType="{x:Type Button}"
           x:Key="TaskPopupBackButtonStyle">
        <Setter Property="Width"
                Value="{StaticResource NavigationButtonWidthAndHeight}" />
        <Setter Property="Height"
                Value="{Binding Width,RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template"
                Value="{StaticResource TaskPopupNavigationTemplate}" />
    </Style>
    <!--#endregion-->
    <!--#region Style for child window style no card section  -->
    <Style x:Key="ChildWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="WindowState"
                Value="Maximized" />
        <Setter Property="WindowStyle"
                Value="{DynamicResource WindowStyle}" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="72" />
                                <RowDefinition Height="8*" />
                                <RowDefinition Height="72" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>


                            <Grid x:Name="HeaderUserControlGrid"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="8*" />
                                </Grid.ColumnDefinitions>

                                <!--<TextBlock  Grid.Column="0" Text="Test-module name"/>-->
                                <Border Grid.Column="0"
                                        Background="{StaticResource LeftPane.Selected.Border}"
                                        CornerRadius="0,0,8,0">
                                    <Grid x:Name="HeaderStackPanel">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <!--<TextBlock  Grid.Column="0" Text="Test"/>
                                    <TextBlock  Grid.Column="1" Text="Test1"/>-->
                                        <Button x:Name="NavigationButton"
                                                HorizontalAlignment="Left"
                                                Margin="0,0,16,0"
                                                Command="{Binding NavigationClickCommand}"
                                                CommandParameter="{Binding RelativeSource={ RelativeSource AncestorType={x:Type Window}}}"
                                                Grid.Column="0"
                                                Style="{StaticResource TaskPopupBackButtonStyle}">
                                        </Button>

                                        <local:CustomTextBlock x:Name="HeaderTextBlock"
                                                               Grid.Column="1"
                                                               TextSize="Medium"
                                                               FontWeight="{StaticResource FontWeight.Bold}"
                                                               Foreground="{StaticResource LeftPane.TextBlock.Foreground}"
                                                               HorizontalAlignment="Stretch"
                                                               VerticalAlignment="Center"
                                                               Text="{Binding ModuleName,Converter={StaticResource HeadingConverter}}" />
                                    </Grid>
                                </Border>




                                <Border Margin="16,0"
                                        x:Name="HeaderUserControlBorder"
                                        Grid.Column="1"
                                        CornerRadius="{StaticResource Header.CornerRadius}"
                                        Background="{StaticResource TopHeader.Background}"
                                        Style="{StaticResource TopHeaderBorderShadowStyle}" />

                                <local:DisplayTagsUserControl DataContext="{Binding DisplayTagsVM}"
                                                              Grid.Column="2"
                                                              Margin="16,8" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="ItemClicked">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.DisplayTagClickedCommand , RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </local:DisplayTagsUserControl>
                            </Grid>
                            <AdornerDecorator Margin="20,20,0,0"
                                              x:Name="ContentPresenter"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="10">
                                <ContentPresenter />
                            </AdornerDecorator>

                            <local:FooterUserControl x:Name="FooterUserControl"
                                                     DataContext="{Binding FooterVM}"
                                                     Grid.Row="2"
                                                     Grid.ColumnSpan="10" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers >
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--#endregion-->
    <!--#region Style for popup window -->

    <Style TargetType="{x:Type Window}"
           x:Key="PopupWindowStyle">
        <Setter Property="Top"
                Value="0" />
        <Setter Property="Left"
                Value="0" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Name="PopupWindowBackground"
                            Background="{StaticResource Window.Popup.Background}">
                        <Viewbox Name="PopupViewBox"
                                 MaxWidth="{Binding ActualWidth, ElementName=GridBorder}"
                                 MaxHeight="{Binding ActualHeight,ElementName=GridBorder}">
                            <Border Name="GridBorder"
                                    Background="{StaticResource Control.BackGround}"
                                    CornerRadius="{StaticResource CornerRadius}">
                                <ContentPresenter></ContentPresenter>
                            </Border>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers >
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for base window-->

    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <DockPanel>
                <Label Content="HeaderPart"
                       Width="100"
                       Height="100"
                       DockPanel.Dock="Top" />
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip"
                                HorizontalAlignment="Right"
                                IsTabStop="false"
                                Visibility="Collapsed"
                                VerticalAlignment="Bottom" />
                </Grid>
                <Label Content="HeaderPart"
                       Width="100"
                       Height="100"
                       DockPanel.Dock="Bottom" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                    <Condition Property="WindowState"
                               Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="WindowResizeGrip"
                        Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="WindowState"
                Value="Maximized" />
        <Setter Property="WindowStyle"
                Value="{DynamicResource WindowStyle}" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="72" />
                                <RowDefinition Height="8*" />
                                <RowDefinition Height="72" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"
                                                  MaxWidth="{DynamicResource MaxWidth}" />
                                <ColumnDefinition Width="1*"
                                                  MaxWidth="{DynamicResource MaxWidth}" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*"
                                                  MaxWidth="{DynamicResource MaxWidth}" />
                                <ColumnDefinition Width="1*"
                                                  MaxWidth="{DynamicResource MaxWidth}" />
                                <ColumnDefinition Width="1*"
                                                  MaxWidth="{DynamicResource MaxWidth}" />
                            </Grid.ColumnDefinitions>

                            <Grid x:Name="HeaderUserControlGrid"
                                  Grid.Row="0"
                                  Grid.Column="2"
                                  Grid.ColumnSpan="8">
                                <Border Margin="16,0,16,0"
                                        x:Name="HeaderUserControlBorder"
                                        CornerRadius="{StaticResource Header.CornerRadius}"
                                        Background="{StaticResource TopHeader.Background}"
                                        Style="{StaticResource TopHeaderBorderShadowStyle}" />

                                <local:DisplayTagsUserControl DataContext="{Binding DisplayTagsVM}"
                                                              Margin="16,8" />
                            </Grid>
                            <local:LeftPaneUserControl x:Name="LeftPaneUserControl"
                                                       DataContext="{Binding LeftPaneVM}"
                                                       Grid.RowSpan="2"
                                                       Grid.Column="0"
                                                       Grid.ColumnSpan="2">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MenuSelected">
                                        <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                               Command="{Binding Path=DataContext.LeftPaneMenuSelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}">
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="NavigationClick">
                                        <i:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                                               Command="{Binding Path=DataContext.LeftPaneNavigationClickedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}">
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </local:LeftPaneUserControl>

                            <AdornerDecorator Margin="20,20,0,0"
                                              x:Name="ContentPresenter"
                                              Grid.Row="1"
                                              Grid.Column="2"
                                              Grid.ColumnSpan="8">
                                <ContentPresenter />
                            </AdornerDecorator>

                            <local:FooterUserControl x:Name="FooterUserControl"
                                                     DataContext="{Binding FooterVM}"
                                                     Grid.Row="2"
                                                     Grid.ColumnSpan="10" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FooterVM.SideBarContent}"
                                           Value="Show Sidebar" />
                                <Condition Binding="{Binding Path=FooterVM.HideSideBarVisibility}"
                                           Value="Visible" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="LeftPaneUserControl"
                                    Value="Collapsed" />
                            <Setter Property="Grid.Column"
                                    TargetName="ContentPresenter"
                                    Value="0" />
                            <Setter Property="Grid.Column"
                                    TargetName="HeaderUserControlGrid"
                                    Value="0" />
                            <Setter Property="Grid.ColumnSpan"
                                    TargetName="ContentPresenter"
                                    Value="10" />
                            <Setter Property="Grid.ColumnSpan"
                                    TargetName="HeaderUserControlGrid"
                                    Value="10" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region Style for dashboard login -->
    <Style x:Key="BaseWindowDashboardStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Top"
                Value="0" />
        <Setter Property="Left"
                Value="0" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="WindowState"
                Value="Maximized" />
        <Setter Property="WindowStyle"
                Value="{DynamicResource WindowStyle}" />
        <Setter Property="ResizeMode"
                Value="{DynamicResource Resizemode}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="72" />
                        </Grid.RowDefinitions>
                        <Border Name="ContentBackgroundBorder"
                                Grid.Row="0"
                                Background="{StaticResource Control.BackGround}">
                            <ContentPresenter x:Name="ContentPresenter"/>
                        </Border>
                        <local:FooterUserControl x:Name="FooterUserControl"
                                                 DataContext="{Binding FooterVM}"
                                                 Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupStylewithFooter"
           TargetType="{x:Type Window}">
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Name="PopupWindowBackground"
                            Background="{StaticResource Window.Popup.Background}">
                        <Viewbox Name="PopupViewBox"
                                 MaxWidth="{Binding ActualWidth, ElementName=GridBorder}"
                                 MaxHeight="{Binding ActualHeight,ElementName=GridBorder}">
                            <Viewbox.Style>
                                <Style TargetType="{x:Type Viewbox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MultiScreenMode}"
                                                     Value="True">
                                            <Setter Property="Margin"
                                                    Value="0,8" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                            <Border Name="GridBorder"
                                    Background="{StaticResource Control.BackGround}"
                                    CornerRadius="{StaticResource CornerRadius}">
                                <ContentPresenter />
                                <!--<Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="72" />
                                    </Grid.RowDefinitions>

                                    <ContentPresenter Grid.Row="0"></ContentPresenter>

                                    <local:FooterUserControl x:Name="FooterUserControl"
                                                             DataContext="{Binding FooterVM}"
                                                             Grid.Row="1" />
                                </Grid>-->
                            </Border>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingVisible}"
                                     Value="True">
                            <Setter Property="Cursor"
                                    Value="Wait" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion -->

    <!--#region Style for generic right section-->

    <Style TargetType="Button"
           x:Key="PreviousNavigationButtonStyle">
        <Setter Property="Width"
                Value="50" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid Name="LeftArrowGrid"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0h24v24H0z" />
                            <Path Fill="{StaticResource Control.BorderBrush.Focused}"
                                  Name="LeftArrowPath"
                                  Data="M16.667 0L19 2.4 9.74 12 19 21.6 16.667 24 5 12z" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Path.Fill"
                                    TargetName="LeftArrowPath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true">
                            <Setter Property="Path.Fill"
                                    TargetName="LeftArrowPath"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="NextNavigationButtonStyle">
        <Setter Property="Width"
                Value="50" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontWeight"
                Value="{StaticResource FontWeight.Bold}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontFamily}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path Data="M0 0H24V24H0z" />
                            <Path Fill="{StaticResource Control.ComboBackground}"
                                  Name="RightArrowPath"
                                  Data="M16.667 24L19 21.6 9.74 12 19 2.4 16.667 0 5 12z"
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Path.Fill"
                                    TargetName="RightArrowPath"
                                    Value="{StaticResource Control.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true">
                            <Setter Property="Path.Fill"
                                    TargetName="RightArrowPath"
                                    Value="{StaticResource Control.BorderBrush.Focused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Style for border shadow style-->
    <Style x:Key="LeftPaneGridShadowStyle"
           TargetType="Grid">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20"
                                  ShadowDepth="0"
                                  Color="{StaticResource LeftPane.Grid.Shadow}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionBarShadowStyle"
           TargetType="Border">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20"
                                  ShadowDepth="0"
                                  Color="{StaticResource ActionBar.Shadow}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopHeaderBorderShadowStyle"
           TargetType="Border">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20"
                                  ShadowDepth="0"
                                  Color="{StaticResource TopHeader.Shadow}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentAreaBorderShadowStyle"
           TargetType="Border">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20"
                                  ShadowDepth="0"
                                  Color="{StaticResource ContentAreaBorder.Shadow}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

</ResourceDictionary>